================================================================================================
git init  в каталоге проекта

================================================================================================
Параметры установки окончаний строк:
git config --global user.name "Your Name"
git config --global user.email "your_email@whatever.com"

Также, для пользователей Unix/Mac:

ВЫПОЛНИТЬ:
git config --global core.autocrlf input
git config --global core.safecrlf true
Для пользователей Windows:

ВЫПОЛНИТЬ:
git config --global core.autocrlf true
git config --global core.safecrlf true

================================================================================================
в конфиге прописать алиасы:
[alias]
	co = checkout
	ci = commit
	st = status
	br = branch
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	type = cat-file -t
	dump = cat-file -p	

================================================================================================
добавление в индекс
git add .

================================================================================================
подтверждение добавления:
git commit -m "first commit"

================================================================================================
создать ветку и сразу перейти в неё:
git checkout -b style

это то же самое что и:
git branch <имяветки> за которым идет git checkout <имяветки>

================================================================================================
слияние веток:
допустим есть ветка master и ветка jquery. чтобы их слить нужно, находясь в master, выполнить:
git merge jquery
затем для верности можно ещё накатить изменений и, проиндексировав, сохранить.
получится что-то типа этого:
$ git hist --all
* bdf1e3e 2014-06-18 | newmaster (HEAD, master) [zlodiak]
* 4c5a0ee 2014-06-18 | conflict end2 (jquery) [zlodiak]
*   229b324 2014-06-18 | title conflict [zlodiak]
|\
| * 040e8a7 2014-06-18 | title master [zlodiak]
* | b7b5214 2014-06-18 | line in title [zlodiak]
* | 015242d 2014-06-18 | jquery add [zlodiak]
|/
* 216a09a 2014-06-18 | first commit [zlodiak]

================================================================================================

================================================================================================
конфликты при слиянии веток:
если возник конфликт, то его нужно разрешить вручную.
примерно такой код
<!-- Author: Marina Pushkova (marina@githowto.com) -->
<html>
  <head>
<<<<<<< HEAD
    <link type="text/css" rel="stylesheet" media="all" href="style.css" />
=======
    <!-- no style -->
>>>>>>> master
  </head>
  <body>
    <h1>Hello,World! Life is great!</h1>
  </body>
</html>

заменить на такой
<!-- Author: Marina Pushkova (marina@githowto.com) -->
<html>
  <head>
    <link type="text/css" rel="stylesheet" media="all" href="style.css" />
  </head>
  <body>
    <h1>Hello,World! Life is great!</h1>
  </body>
</html>

затем проиндексировать и закоммитить

================================================================================================
клонировать репозиторий:
git clone cloned_auto auto

================================================================================================
затем вносим изменения в основной репозиторий. индексируем и коммитим.
извлечём изменения из основного репозитория в клонорованный:
cd ../cloned_hello
git fetch
git hist --all

видно, что head находится в предпоследней записи(а не в последней). это потому, что изменения перенесены из основной ветки, но не слиты с текущей веткой клонированного репозитория

================================================================================================
сольём изменения в клонированный репозиторий:
находясь в клонированном репозитории ввести:
git merge origin/master

тепрерь изменения видны в файле

================================================================================================
git pull
это команда, которая заменяет
git fetch
git merge origin/master

================================================================================================
чистый репозиторий создать:
чистый это такой, который не содержит рабочих файлов, а содержит только дельты изменений в виде гитовских объектов. 
он обычно используется на удалённом сервере для расшаривания(например в инете лежит и отображает то, что у меня на винте)
cd ..
git clone --bare hello hello.git
ls hello.git

при этом находиться нужно на уровень выше рабочего каталога оригинального проекта


================================================================================================
объявим созданный ранее чистый репозиторий как расшаривающий основной репозиторий
cd hello
git remote add shared ../hello.git

================================================================================================
отправить изменения в удалённый(чистый репозиторий):
выполнить из рабочего каталога
git push shared master

================================================================================================
клонировать проект с git hub:
на странице проекта должна быть ссылка типа https://github.com/gilbitron/Nivo-Slider.git
её нужно спопировать в буфер обмена
затем зайт в родительский каталог всех проектов на своём диске и запустить команду git clone https://github.com/gilbitron/Nivo-Slider.git

================================================================================================
================================================================================================
================================================================================================
================================================================================================
================================================================================================
================================================================================================
================================================================================================