по поводу степени связанности объектов

запутал я всех своими абстракциями, но сейчас всё пояснится

в книжке того же эдди османи "Разработка Backbone.js приложений (2014)" в главе "агрегаторы событий и посредники" рассказывается как раз об тех двух подходах, которые я описал в первом посте. и сама библиотека backbone там не при чём

я так понял, что в первом случае(который я описал в первом посте) совсем избежать связанности не получится. пример:

летит снаряд, он постоянно перебирает массив астероидов(то есть знает о существовании других объетов), и если сталкивается с астероидом, то генерирует событие, которое обрабатывается некоторым ядром(ядро только слушает подобно jquery-методу .on()). в результате например ядро заставляет астероид взорваться

во втором случае объект-посредник координирует поведение всех объектов. при каждый объект(ракета или астероид) не знает о соседях(а знает только об объекте-посреднике). в процессе игры расчёт всех координат и проверка на столкновения происходит в объекте посреднике.

 

вывод: второй способ удобен когда объектов не много(то есть логика объекта-посредника не превратится в простыню кода). первый способ удобен когда объектов очень много(в этом случае допускается увеличение связанности объектов как меньшее из зол)

 

я в представленном примере не использовал ни один из этих методов в чистом виде. а значит придётся многое переделывать иначе сам запутаюсь(собственно уже начинаю)

 

ps:

написал всё это скорее для себя. чтобы отложилось))

https://htmlforum.ru/topic/56083-naskolko-silno-svyazyivat-obektyi-v-igre/

======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================
======================