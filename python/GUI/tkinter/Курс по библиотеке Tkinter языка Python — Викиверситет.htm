<!DOCTYPE html>
<html lang="ru" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Курс по библиотеке Tkinter языка Python — Викиверситет</title>
<meta name="generator" content="MediaWiki 1.23wmf10" />
<link rel="alternate" type="application/x-wiki" title="Править" href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit" />
<link rel="edit" title="Править" href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit" />
<link rel="shortcut icon" href="//bits.wikimedia.org/favicon/wikiversity.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Викиверситет (ru)" />
<link rel="EditURI" type="application/rsd+xml" href="//ru.wikiversity.org/w/api.php?action=rsd" />
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Викиверситет — Atom-лента" href="/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D0%B2%D0%B5%D0%B6%D0%B8%D0%B5_%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8&amp;feed=atom" />
<link rel="canonical" href="http://ru.wikiversity.org/wiki/%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python" />
<link rel="stylesheet" href="//bits.wikimedia.org/ru.wikiversity.org/load.php?debug=false&amp;lang=ru&amp;modules=ext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmw.PopUpMediaTransform%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="//bits.wikimedia.org/ru.wikiversity.org/load.php?debug=false&amp;lang=ru&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: ruwikiversity:resourceloader:filter:minify-css:7:4c4c97f99e3f15d2ad0d087c6015ddfb */</style>

<script src="//bits.wikimedia.org/ru.wikiversity.org/load.php?debug=false&amp;lang=ru&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Курс_по_библиотеке_Tkinter_языка_Python","wgTitle":"Курс по библиотеке Tkinter языка Python","wgCurRevisionId":96647,"wgRevisionId":96647,"wgArticleId":1616,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Python"],"wgBreakFrames":false,"wgPageContentLanguage":"ru","wgPageContentModel":"wikitext","wgSeparatorTransformTable":[",\t."," \t,"],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь"],"wgMonthNamesShort":["","янв","фев","мар","апр","май","июн","июл","авг","сен","окт","ноя","дек"],"wgRelevantPageName":"Курс_по_библиотеке_Tkinter_языка_Python","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgULSAcceptLanguageList":["ru-ru","ru","en-us","en"],"wgULSCurrentAutonym":"русский","wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","Geo":{"city":"","country":""},"wgNoticeProject":"wikiversity"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,
"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"uls-preferences":"","language":"ru","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi",
"variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs828":false,"searchNs829":false,"variant":"ru"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: ruwikiversity:resourceloader:filter:minify-js:7:7fb350cedcc3d10660a42d1c2716f0a3 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","ext.uls.init","ext.uls.interface","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.python.source-python .de1, .python.source-python .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.python.source-python  {font-family:monospace;}
.python.source-python .imp {font-weight: bold; color: red;}
.python.source-python li, .python.source-python .li1 {font-weight: normal; vertical-align:top;}
.python.source-python .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.python.source-python .li2 {font-weight: bold; vertical-align:top;}
.python.source-python .kw1 {color: #ff7700;font-weight:bold;}
.python.source-python .kw2 {color: #008000;}
.python.source-python .kw3 {color: #dc143c;}
.python.source-python .kw4 {color: #0000cd;}
.python.source-python .co1 {color: #808080; font-style: italic;}
.python.source-python .coMULTI {color: #808080; font-style: italic;}
.python.source-python .es0 {color: #000099; font-weight: bold;}
.python.source-python .br0 {color: black;}
.python.source-python .sy0 {color: #66cc66;}
.python.source-python .st0 {color: #483d8b;}
.python.source-python .nu0 {color: #ff4500;}
.python.source-python .me1 {color: black;}
.python.source-python .ln-xtra, .python.source-python li.ln-xtra, .python.source-python div.ln-xtra {background-color: #ffc;}
.python.source-python span.xtra { display:block; }

/*]]>*/
</style><script src="//bits.wikimedia.org/geoiplookup"></script><link rel="dns-prefetch" href="//meta.wikimedia.org" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf10/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Курс_по_библиотеке_Tkinter_языка_Python skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="ru"><span dir="auto">Курс по библиотеке Tkinter языка Python</span></h1>
			<div id="bodyContent">
								<div id="siteSub">Материал из Викиверситет</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Перейти к:					<a href="#mw-navigation">навигация</a>, 					<a href="#p-search">поиск</a>
				</div>
				<div id="mw-content-text" lang="ru" dir="ltr" class="mw-content-ltr"><p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Содержание</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#.D0.92.D0.B2.D0.B5.D0.B4.D0.B5.D0.BD.D0.B8.D0.B5"><span class="tocnumber">1</span> <span class="toctext">Введение</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#.D0.A7.D1.82.D0.BE_.D1.82.D0.B0.D0.BA.D0.BE.D0.B5_Tkinter.3F"><span class="tocnumber">2</span> <span class="toctext">Что такое Tkinter?</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#.D0.9A.D0.BB.D0.B0.D1.81.D1.81_Tk"><span class="tocnumber">3</span> <span class="toctext">Класс Tk</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#.D0.9E.D0.B1.D1.89.D0.B5.D0.B5_.D0.B4.D0.BB.D1.8F_.D0.B2.D1.81.D0.B5.D1.85_.D0.B2.D0.B8.D0.B4.D0.B6.D0.B5.D1.82.D0.BE.D0.B2"><span class="tocnumber">4</span> <span class="toctext">Общее для всех виджетов</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="#.D0.9C.D0.B5.D1.82.D0.BE.D0.B4.D1.8B_.D0.B2.D0.B8.D0.B4.D0.B6.D0.B5.D1.82.D0.BE.D0.B2"><span class="tocnumber">4.1</span> <span class="toctext">Методы виджетов</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#.22.D0.A1.D0.B8.D1.81.D1.82.D0.B5.D0.BC.D0.BD.D1.8B.D0.B5.22_.D0.BC.D0.B5.D1.82.D0.BE.D0.B4.D1.8B"><span class="tocnumber">5</span> <span class="toctext">"Системные" методы</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#after.2C_after_idle_.D0.B8_after_cancel.5B3.5D"><span class="tocnumber">5.1</span> <span class="toctext">after, after_idle и after_cancel<sup>[3]</sup></span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#update_.D0.B8_update_idletasks.5B4.5D"><span class="tocnumber">5.2</span> <span class="toctext">update и update_idletasks<sup>[4]</sup></span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#eval_.D0.B8_evalfile"><span class="tocnumber">5.3</span> <span class="toctext">eval и evalfile</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="#.D0.9E.D1.81.D0.BD.D0.BE.D0.B2.D0.BD.D1.8B.D0.B5_.D0.B2.D0.B8.D0.B4.D0.B6.D0.B5.D1.82.D1.8B"><span class="tocnumber">6</span> <span class="toctext">Основные виджеты</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="#Toplevel.5B5.5D"><span class="tocnumber">6.1</span> <span class="toctext">Toplevel<sup>[5]</sup></span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#Button"><span class="tocnumber">6.2</span> <span class="toctext">Button</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="#Label"><span class="tocnumber">6.3</span> <span class="toctext">Label</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="#Entry"><span class="tocnumber">6.4</span> <span class="toctext">Entry</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#Text"><span class="tocnumber">6.5</span> <span class="toctext">Text</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#Listbox"><span class="tocnumber">6.6</span> <span class="toctext">Listbox</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#Frame"><span class="tocnumber">6.7</span> <span class="toctext">Frame</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#Checkbutton"><span class="tocnumber">6.8</span> <span class="toctext">Checkbutton</span></a></li>
<li class="toclevel-2 tocsection-19"><a href="#Radiobutton"><span class="tocnumber">6.9</span> <span class="toctext">Radiobutton</span></a></li>
<li class="toclevel-2 tocsection-20"><a href="#Scale"><span class="tocnumber">6.10</span> <span class="toctext">Scale</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="#Scrollbar"><span class="tocnumber">6.11</span> <span class="toctext">Scrollbar</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-22"><a href="#.D0.A3.D0.BF.D0.B0.D0.BA.D0.BE.D0.B2.D1.89.D0.B8.D0.BA.D0.B8"><span class="tocnumber">7</span> <span class="toctext">Упаковщики</span></a>
<ul>
<li class="toclevel-2 tocsection-23"><a href="#pack.28.29.5B6.5D"><span class="tocnumber">7.1</span> <span class="toctext">pack()<sup>[6]</sup></span></a></li>
<li class="toclevel-2 tocsection-24"><a href="#grid.28.29.5B8.5D"><span class="tocnumber">7.2</span> <span class="toctext">grid()<sup>[8]</sup></span></a></li>
<li class="toclevel-2 tocsection-25"><a href="#place.28.29.5B10.5D"><span class="tocnumber">7.3</span> <span class="toctext">place()<sup>[10]</sup></span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-26"><a href="#.D0.9F.D1.80.D0.B8.D0.B2.D1.8F.D0.B7.D0.BA.D0.B0_.D1.81.D0.BE.D0.B1.D1.8B.D1.82.D0.B8.D0.B9"><span class="tocnumber">8</span> <span class="toctext">Привязка событий</span></a>
<ul>
<li class="toclevel-2 tocsection-27"><a href="#command"><span class="tocnumber">8.1</span> <span class="toctext">command</span></a></li>
<li class="toclevel-2 tocsection-28"><a href="#bind.28.29.5B1.5D"><span class="tocnumber">8.2</span> <span class="toctext">bind()[1]</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-29"><a href="#.D0.98.D0.B7.D0.BE.D0.B1.D1.80.D0.B0.D0.B6.D0.B5.D0.BD.D0.B8.D1.8F"><span class="tocnumber">9</span> <span class="toctext">Изображения</span></a>
<ul>
<li class="toclevel-2 tocsection-30"><a href="#BitmapImage"><span class="tocnumber">9.1</span> <span class="toctext">BitmapImage</span></a></li>
<li class="toclevel-2 tocsection-31"><a href="#PhotoImage"><span class="tocnumber">9.2</span> <span class="toctext">PhotoImage</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-32"><a href="#ttk"><span class="tocnumber">10</span> <span class="toctext">ttk</span></a>
<ul>
<li class="toclevel-2 tocsection-33"><a href="#Style"><span class="tocnumber">10.1</span> <span class="toctext">Style</span></a></li>
<li class="toclevel-2 tocsection-34"><a href="#Combobox"><span class="tocnumber">10.2</span> <span class="toctext">Combobox</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-35"><a href="#.D0.9F.D1.80.D0.B8.D0.BC.D0.B5.D1.87.D0.B0.D0.BD.D0.B8.D1.8F"><span class="tocnumber">11</span> <span class="toctext">Примечания</span></a></li>
<li class="toclevel-1 tocsection-36"><a href="#.D0.A1.D1.81.D1.8B.D0.BB.D0.BA.D0.B8"><span class="tocnumber">12</span> <span class="toctext">Ссылки</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id=".D0.92.D0.B2.D0.B5.D0.B4.D0.B5.D0.BD.D0.B8.D0.B5">Введение</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=1" title="Редактировать раздел «Введение»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Этой библиотеке посвящено мало внимания, и найти в рунете курс, книгу или FAQ по ней довольно-таки сложно. Стоит отметить, что здесь отражены только основы этой библиотеки, и надеюсь, что более опытные люди дополнят эту статью.</p>
<h2><span class="mw-headline" id=".D0.A7.D1.82.D0.BE_.D1.82.D0.B0.D0.BA.D0.BE.D0.B5_Tkinter.3F">Что такое Tkinter?</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=2" title="Редактировать раздел «Что такое Tkinter?»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Tkinter (от англ. tk interface) - это графическая библиотека, позволяющая создавать программы с оконным интерфейсом. Эта библиотека является интерфейсом к популярному языку программирования и инструменту создания графических приложений tcl/tk. Tkinter, как и tcl/tk является кроссплатформенной библиотекой и может быть использована в большинстве распространённых операционных систем (Windows, Linux, Mac OS X и др.)</p>
<p>Так как Tkinter является достаточно прозрачным интерфейсом к tcl/tk, то основным источником информации для неё являются man-страницы tcl/tk. Эти страницы имеются в любой Unix-системе (в разделе n или 3tk). Также они доступны онлайн на сайте <a rel="nofollow" class="external free" href="http://tcl.tk">http://tcl.tk</a>. Основные:</p>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/">Список разделов</a></li>
<li><a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/contents.htm">Список виджетов и команд</a></li>
<li><a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/options.htm">Список общих опций для виджетов</a></li>
</ul>
<p>Импортируется она как и любая другая библиотека:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">import</span> <span class="kw3">Tkinter</span>
</pre></div>
</div>
<p>или</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
</pre></div>
</div>
<p>Начиная с версии python-3.0 библиотека переименована в соответствии с PEP 8 в tkinter (с маленькой буквы).</p>
<p>В Tkinter визуальные контроллы называются виджетами (widget, от англ. window gadget) - стандартизированный компонент графического интерфейса, с которым взаимодействует пользователь.</p>
<h2><span class="mw-headline" id=".D0.9A.D0.BB.D0.B0.D1.81.D1.81_Tk">Класс Tk</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=3" title="Редактировать раздел «Класс Tk»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Tk является базовым классом любого Tkinter приложения. При создании объекта этого класса запускается интерпретатор tcl/tk и создаётся базовое окно приложения.</p>
<p>Tkinter является событийно-ориентированной библиотекой. В приложениях такого типа имеется главный цикл обработки событий. В Tkinter такой цикл запускается методом mainloop. Для явного выхода из интерпретатора и завершения цикла обработки событий используется метод quit.</p>
<p>Таким образом минимальное приложение на Tkinter будет таким:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root <span class="sy0">=</span> Tk<span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>В приложении можно использовать несколько интерпретаторов tcl/tk. Так как после вызова метода mainloop дальнейшие команды python исполняться не будут до выхода из цикла обработки событий, необходимо метод mainloop всех интерпретаторов кроме последнего осуществлять в фоновом режиме. Пример запуска двух интерпретаторов:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root1 <span class="sy0">=</span> Tk<span class="br0">(</span><span class="br0">)</span>
root2 <span class="sy0">=</span> Tk<span class="br0">(</span><span class="br0">)</span>
root1.<span class="me1">after</span><span class="br0">(</span><span class="nu0">500</span><span class="sy0">,</span> root1.<span class="me1">mainloop</span><span class="br0">)</span> <span class="co1"># первый цикл запускаем в фоне</span>
root2.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>При использовании двух и более интерпретаторов необходимо следить, чтобы объекты, созданные в одном интерпретаторе, использовались только в нём. Например, изображение, созданное в первом интерпретаторе, может быть использовано много раз в этом же интерпретаторе, но не может быть использовано в других интерпретаторах. Необходимость в запуске нескольких интерпретаторов в одном приложении возникает крайне редко. Для создания дополнительного окна приложения в большинстве случаев достаточно виджета Toplevel.</p>
<h2><span class="mw-headline" id=".D0.9E.D0.B1.D1.89.D0.B5.D0.B5_.D0.B4.D0.BB.D1.8F_.D0.B2.D1.81.D0.B5.D1.85_.D0.B2.D0.B8.D0.B4.D0.B6.D0.B5.D1.82.D0.BE.D0.B2">Общее для всех виджетов</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=4" title="Редактировать раздел «Общее для всех виджетов»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Все виджеты в Tkinter обладают некоторыми общими свойствами. Опишем их, перед тем как перейти к рассмотрению конкретных виджетов. Виджеты создаются вызовом конструктора соответствующего класса. Первый аргумент (как правило неименованный, но можно использовать имя <i>master</i>) это родительский виджет, в который будет упакован (помещён) наш виджет. Родительский виджет можно не указывать, в таком случае будет использовано главное окно приложения. Далее следуют именованные аргументы, конфигурирующие виджет. Это может быть используемый шрифт (font=...), цвет виджета (bg=...), команда, выполняющаяся при активации виджета (command=...) и т.д. Полный список всех аргументов можно посмотреть в <a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/options.html8.5/TkCmd/options.htm">man options</a> и man-странице соответствующего виджета (например <a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/button.htm">man button</a>, см. разделы "STANDARD OPTIONS" и "WIDGET-SPECIFIC OPTIONS"). Пример кода:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">def</span> button_clicked<span class="br0">(</span><span class="br0">)</span>:
    <span class="kw1">print</span> u<span class="st0">"Клик!"</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
<span class="co1"># кнопка по умолчанию</span>
button1 <span class="sy0">=</span> Button<span class="br0">(</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
<span class="co1"># кнопка с указанием родительского виджета и несколькими аргументами</span>
button2 <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="sy0">,</span> bg<span class="sy0">=</span><span class="st0">"red"</span><span class="sy0">,</span> text<span class="sy0">=</span>u<span class="st0">"Кликни меня!"</span><span class="sy0">,</span> command<span class="sy0">=</span>button_clicked<span class="br0">)</span>
button2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h3><span class="mw-headline" id=".D0.9C.D0.B5.D1.82.D0.BE.D0.B4.D1.8B_.D0.B2.D0.B8.D0.B4.D0.B6.D0.B5.D1.82.D0.BE.D0.B2">Методы виджетов</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=5" title="Редактировать раздел «Методы виджетов»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<dl>
<dt>configure, config</dt>
</dl>
<p>Виджеты могут быть сконфигурированы во время создания, но иногда необходимо изменить конфигурацию виджета во время исполнения программы. Для этого используется метод <i>configure</i> (или его синоним <i>config</i>). Также можно использовать квадратные скобки (widget['option'] = new_value). Пример, программа выводит текущее время, после клика по кнопке:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">import</span> <span class="kw3">time</span>
<span class="kw1">def</span> button_clicked<span class="br0">(</span><span class="br0">)</span>:
    <span class="co1"># изменяем текст кнопки</span>
    button<span class="br0">[</span><span class="st0">'text'</span><span class="br0">]</span> <span class="sy0">=</span> <span class="kw3">time</span>.<span class="me1">strftime</span><span class="br0">(</span><span class="st0">'%H:%M:%S'</span><span class="br0">)</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
<span class="co1"># создаём виджет</span>
button <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="br0">)</span>
<span class="co1"># конфигурируем виджет после создания</span>
button.<span class="me1">configure</span><span class="br0">(</span>text<span class="sy0">=</span><span class="kw3">time</span>.<span class="me1">strftime</span><span class="br0">(</span><span class="st0">'%H:%M:%S'</span><span class="br0">)</span><span class="sy0">,</span> command<span class="sy0">=</span>button_clicked<span class="br0">)</span>
<span class="co1"># также можно использовать квадратные скобки:</span>
<span class="co1"># button['text'] = time.strftime('%H:%M:%S')</span>
<span class="co1"># button['command'] = button_clicked</span>
button.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>В этом коде функция button_clicked вызывается каждый раз, когда пользователь кликает по кнопке.</p>
<dl>
<dt>cget</dt>
</dl>
<p>Метод cget является обратным к методу configure. Он предназначен для получения информации о конфигурации виджета. Здесь как и в случае с configure можно использовать квадратные скобки (value = widget['option']). Пример, после клика на кнопку программа показывает цвет кнопки и меняет его на другой:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">from</span> <span class="kw3">random</span> <span class="kw1">import</span> <span class="kw3">random</span>
<span class="kw1">def</span> button_clicked<span class="br0">(</span><span class="br0">)</span>:
    button<span class="br0">[</span><span class="st0">'text'</span><span class="br0">]</span> <span class="sy0">=</span> button<span class="br0">[</span><span class="st0">'bg'</span><span class="br0">]</span> <span class="co1"># показываем предыдущий цвет кнопки</span>
    bg <span class="sy0">=</span> <span class="st0">'#%0x%0x%0x'</span> % <span class="br0">(</span><span class="kw3">random</span><span class="br0">(</span><span class="br0">)</span>*<span class="nu0">16</span><span class="sy0">,</span> <span class="kw3">random</span><span class="br0">(</span><span class="br0">)</span>*<span class="nu0">16</span><span class="sy0">,</span> <span class="kw3">random</span><span class="br0">(</span><span class="br0">)</span>*<span class="nu0">16</span><span class="br0">)</span>
    button<span class="br0">[</span><span class="st0">'bg'</span><span class="br0">]</span> <span class="sy0">=</span> bg
    button<span class="br0">[</span><span class="st0">'activebackground'</span><span class="br0">]</span> <span class="sy0">=</span> bg
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
button <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="sy0">,</span> command<span class="sy0">=</span>button_clicked<span class="br0">)</span>
button.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p><br /></p>
<dl>
<dt>destroy</dt>
</dl>
<p>Уничтожение виджета и всех его потомков. Стоит отметить, что если необходимо только на время спрятать какой-либо виджет, то лучше пользоваться упаковщиком grid и методом grid_remove:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">def</span> hide_show<span class="br0">(</span><span class="br0">)</span>:
    <span class="kw1">if</span> label.<span class="me1">winfo_viewable</span><span class="br0">(</span><span class="br0">)</span>:
        label.<span class="me1">grid_remove</span><span class="br0">(</span><span class="br0">)</span>
    <span class="kw1">else</span>:
        label.<span class="me1">grid</span><span class="br0">(</span><span class="br0">)</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
label <span class="sy0">=</span> Label<span class="br0">(</span>text<span class="sy0">=</span>u<span class="st0">'Я здесь!'</span><span class="br0">)</span>
label.<span class="me1">grid</span><span class="br0">(</span><span class="br0">)</span>
button <span class="sy0">=</span> Button<span class="br0">(</span>command<span class="sy0">=</span>hide_show<span class="sy0">,</span> text<span class="sy0">=</span>u<span class="st0">"Спрятать/показать"</span><span class="br0">)</span>
button.<span class="me1">grid</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>Использование grid_remove позволяет сохранять взаимное расположение виджетов.</p>
<dl>
<dt>grab_*<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup></dt>
</dl>
<p>Методы семейства grab_ предназначены для управления потоком события. Виджет, захвативший поток будет получать все события окна или приложения.</p>
<ul>
<li><b>grab_set</b> - передать поток данному виджету</li>
<li><b>grab_set_global</b> - передать <b>глобальный</b> поток данному виджету. В этом случае все события на дисплее будут передаваться этому виджету. Следует пользоваться очень осторожно, т.к. остальные виджеты всех приложений не будут получать события.</li>
<li><b>grab_release</b> - освободить поток</li>
<li><b>grab_status</b> - узнать текущий статус потока событий для виджета. Возможные значения: None, "local" или "global".</li>
<li><b>grab_current</b> - получить виджет, который получает поток</li>
</ul>
<p>Пример, приложение захватывает глобальный поток и освобождает его через 10 секунд:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">after</span><span class="br0">(</span><span class="nu0">200</span><span class="sy0">,</span> root.<span class="me1">grab_set_global</span><span class="br0">)</span>
root.<span class="me1">after</span><span class="br0">(</span><span class="nu0">10000</span><span class="sy0">,</span> root.<span class="me1">grab_release</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p><br /></p>
<dl>
<dt>focus_*<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup></dt>
</dl>
<p>Методы семейства focus_ используются для управления фокусом ввода с клавиатуры. Виджет, имеющий фокус, получает все события с клавиатуры.</p>
<ul>
<li><b>focus</b> (синоним focus_set) - передать фокус виджету.</li>
<li><b>focus_force</b> - передать фокус, даже если приложение не имеет фокуса. Используйте осторожно, поскольку это может раздражать пользователей.</li>
<li><b>focus_get</b> - возвращает виджет, на который направлен фокус, либо None, если такой отсутствует.</li>
<li><b>focus_displayof</b> - возвращает виджет, на который направлен фокус на том дисплее, на котором размещен виджет, либо None, если такой отсутствует.</li>
<li><b>focus_lastfor</b> - возвращает виджет, на который будет направлен фокус, когда окно с этим виджетом получит фокус.</li>
<li><b>tk_focusNext</b> - возвращает виджет, который получит фокус следующим (обычно смена фокуса происходит при нажатии клавиши Tab). Порядок следования определяется последовательностью упаковки виджетов.</li>
<li><b>tk_focusPrev</b> - то же, что и focusNext, но в обратном порядке.</li>
<li><b>tk_focusFollowsMouse</b> - устанавливает, что виджет будет получать фокус при наведении на него мышью. Вернуть нормальное поведение достаточно сложно.</li>
</ul>
<h2><span class="mw-headline" id=".22.D0.A1.D0.B8.D1.81.D1.82.D0.B5.D0.BC.D0.BD.D1.8B.D0.B5.22_.D0.BC.D0.B5.D1.82.D0.BE.D0.B4.D1.8B">"Системные" методы</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=6" title="Редактировать раздел «&quot;Системные&quot; методы»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Эти методы не являются виджет-специфичными, т.е. хотя они являются методами виджетов они влияют на работу интерпретатора tcl/tk.</p>
<h3><span class="mw-headline" id="after.2C_after_idle_.D0.B8_after_cancel.5B3.5D">after, after_idle и after_cancel<sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[3]</a></sup></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=7" title="Редактировать раздел «after, after idle и after cancel[3]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Таймеры. С помощью этих методов вы можете отложить выполнение какого-нибудь кода на определённое время.</p>
<p><b>after</b> - принимает два аргумента: время в миллисекундах и функцию, которую надо выполнить через указанное время. Возвращает идентификатор, который может быть использован в after_cancel.</p>
<p><b>after_idle</b> - принимает один аргумент: функцию. Эта функция будет выполнена после завершения всех отложенных операций (после того, как будут обработаны все события). Возвращает идентификатор, который может быть использован в after_cancel.</p>
<p><b>after_cancel</b> - принимает один аргумент: идентификатор задачи, полученный предыдущими функциями, и отменяет это задание.</p>
<p>Пример, часы:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">import</span> <span class="kw3">time</span>
<span class="kw1">def</span> tick<span class="br0">(</span><span class="br0">)</span>:
    label.<span class="me1">after</span><span class="br0">(</span><span class="nu0">200</span><span class="sy0">,</span> tick<span class="br0">)</span>
    label<span class="br0">[</span><span class="st0">'text'</span><span class="br0">]</span> <span class="sy0">=</span> <span class="kw3">time</span>.<span class="me1">strftime</span><span class="br0">(</span><span class="st0">'%H:%M:%S'</span><span class="br0">)</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
label <span class="sy0">=</span> Label<span class="br0">(</span>font<span class="sy0">=</span><span class="st0">'sans 20'</span><span class="br0">)</span>
label.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
label.<span class="me1">after_idle</span><span class="br0">(</span>tick<span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="update_.D0.B8_update_idletasks.5B4.5D">update и update_idletasks<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=8" title="Редактировать раздел «update и update idletasks[4]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Две функции, для работы с очередью задач. Их выполнение вызывает обработку отложенных задач.</p>
<p><b>update_idletasks</b> выполняет задачи, обычно откладываемые "на потом", когда приложение будет простаивать. Это приводит к прорисовке всех виджетов, расчёту их расположения и т.д. Обычно эта функция используется если были внесены изменения в состояние приложения, и вы хотите, чтобы эти изменения были отображены на экране немедленно, не дожидаясь завершения сценария.</p>
<p><b>update</b> обрабатывает все задачи, стоящие в очереди. Обычно эта функция используется во время "тяжёлых" расчётов, когда необходимо чтобы приложение оставалось отзывчивым на действия пользователя.</p>
<p>Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">import</span> <span class="kw3">math</span>
<span class="kw1">def</span> hard_job<span class="br0">(</span><span class="br0">)</span>:
    x <span class="sy0">=</span> <span class="nu0">1000</span>
    <span class="kw1">while</span> <span class="kw2">True</span>:
        x <span class="sy0">=</span> <span class="kw3">math</span>.<span class="me1">log</span><span class="br0">(</span>x<span class="br0">)</span> ** <span class="nu0">2.8</span>
        root.<span class="me1">update</span><span class="br0">(</span><span class="br0">)</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
button <span class="sy0">=</span> Button<span class="br0">(</span><span class="br0">)</span>
button.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">after</span><span class="br0">(</span><span class="nu0">500</span><span class="sy0">,</span> hard_job<span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="eval_.D0.B8_evalfile">eval и evalfile</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=9" title="Редактировать раздел «eval и evalfile»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Две недокументированные функции для выполнения кода на tcl. <b>eval</b> позволяет выполнить строку на языке программирования tcl, а <b>evalfile</b> - выполнить код, записанный в файл. В качестве аргументов принимают соответственно строку и путь к файлу. Данные функции полезны при использовании дополнительных модулей, написанных на tcl. Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
root.<span class="kw2">eval</span><span class="br0">(</span><span class="st0">'package require tile; ttk::style theme use clam'</span><span class="br0">)</span>
root.<span class="kw2">eval</span><span class="br0">(</span><span class="st0">'ttk::button .b -text {ttk button}; pack .b'</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h2><span class="mw-headline" id=".D0.9E.D1.81.D0.BD.D0.BE.D0.B2.D0.BD.D1.8B.D0.B5_.D0.B2.D0.B8.D0.B4.D0.B6.D0.B5.D1.82.D1.8B">Основные виджеты</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=10" title="Редактировать раздел «Основные виджеты»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Toplevel.5B5.5D">Toplevel<sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[5]</a></sup></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=11" title="Редактировать раздел «Toplevel[5]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Toplevel - окно верхнего уровня. Обычно используется для создания многоконных программ, а также для диалоговых окон.</p>
<dl>
<dt>Методы виджета</dt>
</dl>
<ul>
<li><b>title</b> - заголовок окна</li>
<li><b>overrideredirect</b> - указание оконному менеджеру игнорировать это окно. Аргументом является True или False. В случае, если аргумент не указан - получаем текущее значение. Если аргумент равен True, то такое окно будет показано оконным менеджером без обрамления (без заголовка и бордюра). Может быть использовано, например, для создания splashscreen при старте программы.</li>
<li><b>iconify / deiconify</b> - свернуть / развернуть окно</li>
<li><b>withdraw</b> - "спрятать" (сделать невидимым) окно. Для того, чтобы снова показать его надо использовать метод <i>deiconify</i>.</li>
<li><b>minsize</b> и <b>maxsize</b> - минимальный / максимальный размер окна. Методы принимают два аргумента - ширина и высота окна. Если аргументы не указаны - возвращают текущее значение.</li>
<li><b>state</b> - получить текущее значение состояния окна. Может возвращать следующие значения: normal (нормальное состояние), icon (показано в виде иконки), iconic (свёрнуто), withdrawn (не показано), zoomed (развёрнуто на полный экран, только для Windows и Mac OS X)</li>
<li><b>resizable</b> - может ли пользователь изменять размер окна. Принимает два аргумента - возможность изменения размера по горизонтали и по вертикали. Без аргументов возвращает текущее значение.</li>
<li><b>geometry</b> - устанавливает геометрию окна в формате ширинаxвысота+x+y (пример: geometry("600x400+40+80") - поместить окно в точку с координатам 40,80 и установить размер в 600x400). Размер или координаты могут быть опущены (geometry("600x400") - только изменить размер, geometry("+40+80") - только переместить окно).</li>
<li><b>transient</b> - сделать окно зависимым от другого окна, указанного в аргументе. Будет сворачиваться вместе с указанным окном. Без аргументов возвращает текущее значение.</li>
<li><b>protocol</b> - получает два аргумента: название события и функцию, которая будет вызываться при наступлении указанного события. События могут называться WM_TAKE_FOCUS (получение фокуса), WM_SAVE_YOURSELF (необходимо сохраниться, в настоящий момент является устаревшим), WM_DELETE_WINDOW (удаление окна).</li>
<li><b>tkraise</b> (синоним lift) и <b>lower</b> - поднимает (размещает поверх всех других окон) или опускает окно. Методы могут принимать один необязательный аргумент: над/под каким окном разместить текущее.</li>
<li><b>grab_set</b> - устанавливает фокус на окно, даже при наличии открытых других окон</li>
<li><b>grab_release</b> - снимает монопольное владение фокусом ввода с окна</li>
</ul>
<p>Эти же методы могут быть использованы для корневого (root) окна.</p>
<p>Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">def</span> window_deleted<span class="br0">(</span><span class="br0">)</span>:
    <span class="kw1">print</span> u<span class="st0">'Окно закрыто'</span>
    root.<span class="me1">quit</span><span class="br0">(</span><span class="br0">)</span> <span class="co1"># явное указание на выход из программы</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">title</span><span class="br0">(</span>u<span class="st0">'Пример приложения'</span><span class="br0">)</span>
root.<span class="me1">geometry</span><span class="br0">(</span><span class="st0">'500x400+300+200'</span><span class="br0">)</span> <span class="co1"># ширина=500, высота=400, x=300, y=200</span>
root.<span class="me1">protocol</span><span class="br0">(</span><span class="st0">'WM_DELETE_WINDOW'</span><span class="sy0">,</span> window_deleted<span class="br0">)</span> <span class="co1"># обработчик закрытия окна</span>
root.<span class="me1">resizable</span><span class="br0">(</span><span class="kw2">True</span><span class="sy0">,</span> <span class="kw2">False</span><span class="br0">)</span> <span class="co1"># размер окна может быть изменен только по горизонтали</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>Таким способом можно предотвратить закрытие окна (например, если закрытие окна приведёт к потере введённых пользователем данных).</p>
<h3><span class="mw-headline" id="Button">Button</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=12" title="Редактировать раздел «Button»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Виджет Button - самая обыкновенная кнопка, которая используется в тысячах программ. Пример кода:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
button1<span class="sy0">=</span>Button<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span><span class="st0">'ok'</span><span class="sy0">,</span>width<span class="sy0">=</span><span class="nu0">25</span><span class="sy0">,</span>height<span class="sy0">=</span><span class="nu0">5</span><span class="sy0">,</span>bg<span class="sy0">=</span><span class="st0">'black'</span><span class="sy0">,</span>fg<span class="sy0">=</span><span class="st0">'red'</span><span class="sy0">,</span>font<span class="sy0">=</span><span class="st0">'arial 14'</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>Разберем этот небольшой код. За создание, собственно, окна, отвечает класс Tk(), и первым делом нужно создать экземпляр этого класса. Этот экземпляр принято называть root, хотя вы можете назвать его как угодно. Далее создаётся кнопка, при этом мы указываем её свойства (начинать нужно с указания окна, в примере - root). Здесь перечислены некоторые из них:</p>
<ul>
<li>text - какой текст будет отображён на кнопке (в примере - ок)</li>
<li>width,height - соответственно, ширина и длина кнопки.</li>
<li>bg - цвет кнопки (сокращенно от background, в примере цвет - чёрный)</li>
<li>fg - цвет текста на кнопке (сокращённо от foreground, в примере цвет - красный)</li>
<li>font - шрифт и его размер (в примере - arial, размер - 14)</li>
</ul>
<p>Далее, нашу кнопку необходимо разместить на окне. Для этого, в Tkinter используются специальные <i>упаковщики</i>( pack(), place(), grid() ). Поподробнее об упаковщиках узнаем позже. Пока, чтобы разместить несколько виджетов на окне, будем применять самый простой упаковщик pack(). В конце программы, нужно использовать функцию mainloop (см. пример), иначе окно не будет создано.</p>
<h3><span class="mw-headline" id="Label">Label</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=13" title="Редактировать раздел «Label»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Label - это виджет, предназначенный для отображения какой-либо надписи без возможности редактирования пользователем. Имеет те же свойства, что и перечисленные свойства кнопки.</p>
<h3><span class="mw-headline" id="Entry">Entry</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=14" title="Редактировать раздел «Entry»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Entry - это виджет, позволяющий пользователю ввести одну строку текста. Имеет дополнительное свойство bd (сокращённо от borderwidth), позволяющее регулировать ширину границы.</p>
<ul>
<li><b>borderwidth</b> - ширина бордюра элемента</li>
<li><b>bd</b> - сокращение от <b>borderwidth</b></li>
<li><b>width</b> - задаёт длину элемента в знакоместах.</li>
</ul>
<h3><span class="mw-headline" id="Text">Text</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=15" title="Редактировать раздел «Text»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Text - это виджет, который позволяет пользователю ввести любое количество текста. Имеет дополнительное свойство wrap, отвечающее за перенос (чтобы, например, переносить по словам, нужно использовать значение WORD).Например:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
text1<span class="sy0">=</span>Text<span class="br0">(</span>root<span class="sy0">,</span>height<span class="sy0">=</span><span class="nu0">7</span><span class="sy0">,</span>width<span class="sy0">=</span><span class="nu0">7</span><span class="sy0">,</span>font<span class="sy0">=</span><span class="st0">'Arial 14'</span><span class="sy0">,</span>wrap<span class="sy0">=</span>WORD<span class="br0">)</span>
text1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Listbox">Listbox</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=16" title="Редактировать раздел «Listbox»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Listbox - это виджет, который представляет из себя список, из элементов которого пользователь может выбирать один или несколько пунктов. Имеет дополнительное свойство selectmode, которое, при значении SINGLE, позволяет пользователю выбрать только один элемент списка, а при значении EXTENDED - любое количество. Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
listbox1<span class="sy0">=</span>Listbox<span class="br0">(</span>root<span class="sy0">,</span>height<span class="sy0">=</span><span class="nu0">5</span><span class="sy0">,</span>width<span class="sy0">=</span><span class="nu0">15</span><span class="sy0">,</span>selectmode<span class="sy0">=</span>EXTENDED<span class="br0">)</span>
listbox2<span class="sy0">=</span>Listbox<span class="br0">(</span>root<span class="sy0">,</span>height<span class="sy0">=</span><span class="nu0">5</span><span class="sy0">,</span>width<span class="sy0">=</span><span class="nu0">15</span><span class="sy0">,</span>selectmode<span class="sy0">=</span>SINGLE<span class="br0">)</span>
list1<span class="sy0">=</span><span class="br0">[</span>u<span class="st0">"Москва"</span><span class="sy0">,</span>u<span class="st0">"Санкт-Петербург"</span><span class="sy0">,</span>u<span class="st0">"Саратов"</span><span class="sy0">,</span>u<span class="st0">"Омск"</span><span class="br0">]</span>
list2<span class="sy0">=</span><span class="br0">[</span>u<span class="st0">"Канберра"</span><span class="sy0">,</span>u<span class="st0">"Сидней"</span><span class="sy0">,</span>u<span class="st0">"Мельбурн"</span><span class="sy0">,</span>u<span class="st0">"Аделаида"</span><span class="br0">]</span>
<span class="kw1">for</span> i <span class="kw1">in</span> list1:
    listbox1.<span class="me1">insert</span><span class="br0">(</span>END<span class="sy0">,</span>i<span class="br0">)</span>
<span class="kw1">for</span> i <span class="kw1">in</span> list2:
    listbox2.<span class="me1">insert</span><span class="br0">(</span>END<span class="sy0">,</span>i<span class="br0">)</span>
listbox1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
listbox2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>Стоит заметить, что в этой библиотеке для того, чтобы использовать русские буквы в строках, нужно использовать Unicode-строки. В Python 2.x для этого нужно перед строкой поставить букву u, в Python 3.x этого делать вообще не требуется, т.к. все строки в нем изначально Unicode. Кроме того в первой или второй строке файла необходимо указать кодировку файла (в комментарии): <i>coding: utf-8</i>. Чаще всего используется формат в стиле текстового редактора emacs:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="co1"># -*- coding: utf-8; -*-</span>
</pre></div>
</div>
<p>В Python 3.x кодировку файла можно не указывать, в этом случае по умолчанию предполагается utf-8.</p>
<h3><span class="mw-headline" id="Frame">Frame</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=17" title="Редактировать раздел «Frame»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Виджет Frame (рамка) предназначен для организации виджетов внутри окна. Рассмотрим пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
frame1<span class="sy0">=</span>Frame<span class="br0">(</span>root<span class="sy0">,</span>width<span class="sy0">=</span><span class="nu0">100</span><span class="sy0">,</span>heigh<span class="sy0">=</span><span class="nu0">100</span><span class="sy0">,</span>bg<span class="sy0">=</span><span class="st0">'green'</span><span class="sy0">,</span>bd<span class="sy0">=</span><span class="nu0">5</span><span class="br0">)</span>
frame2<span class="sy0">=</span>Frame<span class="br0">(</span>root<span class="sy0">,</span>width<span class="sy0">=</span><span class="nu0">150</span><span class="sy0">,</span>heigh<span class="sy0">=</span><span class="nu0">75</span><span class="sy0">,</span>bg<span class="sy0">=</span><span class="st0">'red'</span><span class="sy0">,</span>bd<span class="sy0">=</span><span class="nu0">5</span><span class="br0">)</span>
button1<span class="sy0">=</span>Button<span class="br0">(</span>frame1<span class="sy0">,</span>text<span class="sy0">=</span>u<span class="st0">'Первая кнопка'</span><span class="br0">)</span>
button2<span class="sy0">=</span>Button<span class="br0">(</span>frame2<span class="sy0">,</span>text<span class="sy0">=</span>u<span class="st0">'Вторая кнопка'</span><span class="br0">)</span>
frame1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
frame2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>Свойство bd отвечает за расстояние от края рамки до виджетов.</p>
<h3><span class="mw-headline" id="Checkbutton">Checkbutton</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=18" title="Редактировать раздел «Checkbutton»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Checkbutton - это виджет, который позволяет отметить „галочкой“ определенный пункт в окне. При использовании нескольких пунктов нужно каждому присвоить свою переменную. Разберем пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
var1<span class="sy0">=</span>IntVar<span class="br0">(</span><span class="br0">)</span>
var2<span class="sy0">=</span>IntVar<span class="br0">(</span><span class="br0">)</span>
check1<span class="sy0">=</span>Checkbutton<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span>u<span class="st0">'1 пункт'</span><span class="sy0">,</span>variable<span class="sy0">=</span>var1<span class="sy0">,</span>onvalue<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span>offvalue<span class="sy0">=</span><span class="nu0">0</span><span class="br0">)</span>
check2<span class="sy0">=</span>Checkbutton<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span>u<span class="st0">'2 пункт'</span><span class="sy0">,</span>variable<span class="sy0">=</span>var2<span class="sy0">,</span>onvalue<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span>offvalue<span class="sy0">=</span><span class="nu0">0</span><span class="br0">)</span>
check1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
check2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>IntVar() - специальный класс библиотеки для работы с целыми числами. variable - свойство, отвечающее за прикрепление к виджету переменной. onvalue, offvalue - свойства, которые присваивают прикреплённой к виджету переменной значение, которое зависит от состояния(onvalue - при выбранном пункте, offvalue - при невыбранном пункте).</p>
<h3><span class="mw-headline" id="Radiobutton">Radiobutton</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=19" title="Редактировать раздел «Radiobutton»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Виджет Radiobutton выполняет функцию, схожую с функцией виджета Checkbutton. Разница в том, что в виджете Radiobutton пользователь может выбрать лишь один из пунктов. Реализация этого виджета несколько иная, чем виджета Checkbutton:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
var<span class="sy0">=</span>IntVar<span class="br0">(</span><span class="br0">)</span>
rbutton1<span class="sy0">=</span>Radiobutton<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span><span class="st0">'1'</span><span class="sy0">,</span>variable<span class="sy0">=</span>var<span class="sy0">,</span>value<span class="sy0">=</span><span class="nu0">1</span><span class="br0">)</span>
rbutton2<span class="sy0">=</span>Radiobutton<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span><span class="st0">'2'</span><span class="sy0">,</span>variable<span class="sy0">=</span>var<span class="sy0">,</span>value<span class="sy0">=</span><span class="nu0">2</span><span class="br0">)</span>
rbutton3<span class="sy0">=</span>Radiobutton<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span><span class="st0">'3'</span><span class="sy0">,</span>variable<span class="sy0">=</span>var<span class="sy0">,</span>value<span class="sy0">=</span><span class="nu0">3</span><span class="br0">)</span>
rbutton1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
rbutton2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
rbutton3.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>В этом виджете используется уже одна переменная. В зависимости от того, какой пункт выбран, она меняет своё значение. Самое интересное, что если присвоить этой переменной какое-либо значение, поменяется и выбранный виджет. На этом мы прервём изучение типов виджетов (потом мы к ним обязательно вернёмся).</p>
<h3><span class="mw-headline" id="Scale">Scale</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=20" title="Редактировать раздел «Scale»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Scale (шкала) - это виджет, позволяющий выбрать какое-либо значение из заданного диапазона. Свойства:</p>
<ul>
<li>orient - как расположена шкала на окне. Возможные значения: HORIZONTAL, VERTICAL (горизонтально, вертикально).</li>
<li>length - длина шкалы.</li>
<li>from_ - с какого значения начинается шкала.</li>
<li>to - каким значением заканчивается шкала.</li>
<li>tickinterval - интервал, через который отображаются метки шкалы.</li>
<li>resolution - шаг передвижения (минимальная длина, на которую можно передвинуть движок)</li>
</ul>
<p>Пример кода:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root <span class="sy0">=</span> Tk<span class="br0">(</span><span class="br0">)</span>
<span class="kw1">def</span> getV<span class="br0">(</span>root<span class="br0">)</span>:
    a <span class="sy0">=</span> scale1.<span class="me1">get</span><span class="br0">(</span><span class="br0">)</span>
    <span class="kw1">print</span> <span class="st0">"Значение"</span><span class="sy0">,</span> a 
scale1 <span class="sy0">=</span> Scale<span class="br0">(</span>root<span class="sy0">,</span>orient<span class="sy0">=</span>HORIZONTAL<span class="sy0">,</span>length<span class="sy0">=</span><span class="nu0">300</span><span class="sy0">,</span>from_<span class="sy0">=</span><span class="nu0">50</span><span class="sy0">,</span>to<span class="sy0">=</span><span class="nu0">80</span><span class="sy0">,</span>tickinterval<span class="sy0">=</span><span class="nu0">5</span><span class="sy0">,</span>
               resolution<span class="sy0">=</span><span class="nu0">5</span><span class="br0">)</span>
button1 <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="sy0">,</span>text<span class="sy0">=</span>u<span class="st0">"Получить значение"</span><span class="br0">)</span>
scale1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button1.<span class="me1">bind</span><span class="br0">(</span><span class="st0">"&lt;Button-1&gt;"</span><span class="sy0">,</span>getV<span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>Здесь используется специальный метод get(), который позволяет снять с виджета определенное значение, и используется не только в Scale.</p>
<h3><span class="mw-headline" id="Scrollbar">Scrollbar</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=21" title="Редактировать раздел «Scrollbar»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Этот виджет даёт возможность пользователю "прокрутить" другой виджет (например текстовое поле) и часто бывает полезен. Использование этого виджета достаточно нетривиально. Необходимо сделать две привязки: command полосы прокрутки привязываем к методу xview/yview виджета, а xscrollcommand/yscrollcommand виджета привязываем к методу set полосы прокрутки.</p>
<p>Рассмотрим на примере:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> tkinter <span class="kw1">import</span> *
root <span class="sy0">=</span> Tk<span class="br0">(</span><span class="br0">)</span>
text <span class="sy0">=</span> Text<span class="br0">(</span>root<span class="sy0">,</span> height<span class="sy0">=</span><span class="nu0">3</span><span class="sy0">,</span> width<span class="sy0">=</span><span class="nu0">60</span><span class="br0">)</span>
text.<span class="me1">pack</span><span class="br0">(</span>side<span class="sy0">=</span><span class="st0">'left'</span><span class="br0">)</span>
scrollbar <span class="sy0">=</span> Scrollbar<span class="br0">(</span>root<span class="br0">)</span>
scrollbar.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
<span class="co1"># первая привязка</span>
scrollbar<span class="br0">[</span><span class="st0">'command'</span><span class="br0">]</span> <span class="sy0">=</span> text.<span class="me1">yview</span>
<span class="co1"># вторая привязка</span>
text<span class="br0">[</span><span class="st0">'yscrollcommand'</span><span class="br0">]</span> <span class="sy0">=</span> scrollbar.<span class="kw2">set</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h2><span class="mw-headline" id=".D0.A3.D0.BF.D0.B0.D0.BA.D0.BE.D0.B2.D1.89.D0.B8.D0.BA.D0.B8">Упаковщики</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=22" title="Редактировать раздел «Упаковщики»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Упаковщик (менеджер геометрии, менеджер расположения) это специальный механизм, который размещает (упаковывает) виджеты на окне. В Tkinter есть три упаковщика: pack, place, grid. <b>Обратите внимание, что в одном виджете можно использовать только один тип упаковки, при смешивании разных типов упаковки программа, скорее всего, не будет работать.</b></p>
<p>Разберем каждый из них по порядку:</p>
<h3><span class="mw-headline" id="pack.28.29.5B6.5D">pack()<sup id="cite_ref-6" class="reference"><a href="#cite_note-6">[6]</a></sup></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=23" title="Редактировать раздел «pack()[6]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Упаковщик pack() является самым интеллектуальным (и самым непредсказуемым). При использовании этого упаковщика с помощью свойства side нужно указать к какой стороне родительского виджета он должен примыкать. Как правило этот упаковщик используют для размещения виджетов друг за другом (слева направо или сверху вниз). Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> tkinter <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
button1 <span class="sy0">=</span> Button<span class="br0">(</span>text<span class="sy0">=</span><span class="st0">"1"</span><span class="br0">)</span>
button2 <span class="sy0">=</span> Button<span class="br0">(</span>text<span class="sy0">=</span><span class="st0">"2"</span><span class="br0">)</span>
button3 <span class="sy0">=</span> Button<span class="br0">(</span>text<span class="sy0">=</span><span class="st0">"3"</span><span class="br0">)</span>
button4 <span class="sy0">=</span> Button<span class="br0">(</span>text<span class="sy0">=</span><span class="st0">"4"</span><span class="br0">)</span>
button5 <span class="sy0">=</span> Button<span class="br0">(</span>text<span class="sy0">=</span><span class="st0">"5"</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span>side<span class="sy0">=</span><span class="st0">'left'</span><span class="br0">)</span>
button2.<span class="me1">pack</span><span class="br0">(</span>side<span class="sy0">=</span><span class="st0">'top'</span><span class="br0">)</span>
button3.<span class="me1">pack</span><span class="br0">(</span>side<span class="sy0">=</span><span class="st0">'left'</span><span class="br0">)</span>
button4.<span class="me1">pack</span><span class="br0">(</span>side<span class="sy0">=</span><span class="st0">'bottom'</span><span class="br0">)</span>
button5.<span class="me1">pack</span><span class="br0">(</span>side<span class="sy0">=</span><span class="st0">'right'</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<div class="floatright"><a href="/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:Tkinter-pack.png" class="image"><img alt="Tkinter-pack.png" src="//upload.wikimedia.org/wikiversity/ru/8/84/Tkinter-pack.png" width="108" height="107" /></a></div>
<p>Результат работы можно увидеть на скриншоте справа.</p>
<p>Для создания сложной структуры с использованием этого упаковщика обычно используют Frame, вложенные друг в друга.</p>
<dl>
<dt>Аргументы</dt>
</dl>
<p>При применении этого упаковщика можно указать следующие аргументы:</p>
<ul>
<li><b>side</b> ("left"/"right"/"top"/"bottom") - к какой стороне должен примыкать размещаемый виджет.</li>
<li><b>fill</b> (None/"x"/"y"/"both") - необходимо ли расширять пространство предоставляемое виджету.</li>
<li><b>expand</b> (True/False) - необходимо ли расширять сам виджет, чтобы он занял всё предоставляемое ему пространство.</li>
<li><b>in_</b> - явное указание в какой родительский виджет должен быть помещён.</li>
</ul>
<dl>
<dt>Дополнительные функции</dt>
</dl>
<p>Кроме основной функции у виджетов есть дополнительные методы для работы с упаковщиками.</p>
<ul>
<li><b>pack_configure</b> - синоним для pack.</li>
<li><b>pack_slaves</b> (синоним <i>slaves</i>) - возвращает список всех дочерних упакованных виджетов.</li>
<li><b>pack_info</b> - возвращает информацию о конфигурации упаковки.</li>
<li><b>pack_propagate</b> (синоним <i>propagate</i>) (True/False) - включает/отключает распространении информации о геометрии дочерних виджетов. По умолчанию виджет изменяет свой размер в соответствии с размером своих потомков. Этот метод может отключить такое поведение (pack_propagate(False)). Это может быть полезно, если необходимо, чтобы виджет имел фиксированный размер и не изменял его по прихоти потомков.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup></li>
<li><b>pack_forget</b> (синоним <i>forget</i>) - удаляет виджет и всю информацию о его расположении из упаковщика. Позднее этот виджет может быть снова размещён.</li>
</ul>
<h3><span class="mw-headline" id="grid.28.29.5B8.5D">grid()<sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[8]</a></sup></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=24" title="Редактировать раздел «grid()[8]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Этот упаковщик представляет собой таблицу с ячейками, в которые помещаются виджеты.</p>
<dl>
<dt>Аргументы</dt>
</dl>
<ul>
<li><b>row</b> - номер строки, в который помещаем виджет.</li>
<li><b>rowspan</b> - сколько строк занимает виджет</li>
<li><b>column</b> - номер столбца, в который помещаем виджет.</li>
<li><b>columnspan</b> - сколько столбцов занимает виджет.</li>
<li><b>padx</b> / <b>pady</b> - размер внешней границы (бордюра) по горизонтали и вертикали.</li>
<li><b>ipadx</b> / <b>ipady</b> - размер внутренней границы (бордюра) по горизонтали и вертикали. Разница между pad и ipad в том, что при указании pad расширяется свободное пространство, а при ipad расширяется помещаемый виджет.</li>
<li><b>sticky</b> ("n", "s", "e", "w" или их комбинация) - указывает к какой границе "приклеивать" виджет. Позволяет расширять виджет в указанном направлении. Границы названы в соответствии со сторонами света. "n" (север) - верхняя граница, "s" (юг) - нижняя, "w" (запад) - левая, "e" (восток) - правая.</li>
<li><b>in_</b> - явное указание в какой родительский виджет должен быть помещён.</li>
</ul>
<p>Для каждого виджета указываем, в какой он находится строке, и в каком столбце. Если нужно, указываем, сколько ячеек он занимает (если, например, нам нужно разместить три виджета под одним, необходимо "растянуть" верхний на три ячейки). Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
entry1.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span>column<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span>columnspan<span class="sy0">=</span><span class="nu0">3</span><span class="br0">)</span>
button1.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span>column<span class="sy0">=</span><span class="nu0">0</span><span class="br0">)</span>
button2.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span>column<span class="sy0">=</span><span class="nu0">1</span><span class="br0">)</span>
button3.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span>column<span class="sy0">=</span><span class="nu0">2</span><span class="br0">)</span>
</pre></div>
</div>
<dl>
<dt>Дополнительные функции</dt>
</dl>
<ul>
<li><b>grid_configure</b> - синоним для grid.</li>
<li><b>grid_slaves</b> (синоним <i>slaves</i>) - см. <i>pack_slaves</i>.</li>
<li><b>grid_info</b> - см. <i>pack_info</i>.</li>
<li><b>grid_propagate</b> (синоним <i>propagate</i>) - см. <i>pack_propagate</i>.</li>
<li><b>grid_forget</b> (синоним <i>forget</i>) - см. <i>pack_forget</i>.</li>
<li><b>grid_remove</b> - удаляет виджет из-под управления упаковщиком, но сохраняет информацию об упаковке. Этот метод удобно использовать для временного удаления виджета (см. пример в описании метода destroy).</li>
<li><b>grid_bbox</b> (синоним <i>bbox</i>) - возвращает координаты (в пикселях) указанных столбцов и строк.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup></li>
<li><b>grid_location</b> (синоним <i>location</i>) - принимает два аргумента: x и y (в пикселях). Возвращает номер строки и столбца в которые попадают указанные координаты, либо -1 если координаты попали вне виджета.</li>
<li><b>grid_size</b> (синоним <i>size</i>) - возвращает размер таблицы в строках и столбцах.</li>
<li><b>grid_columnconfigure</b> (синоним <i>columnconfigure</i>) и <b>grid_rowconfigure</b> (синоним <i>rowconfigure</i>) - важные функции для конфигурирования упаковщика. Методы принимают номер строки/столбца и аргументы конфигурации. Список возможных аргументов:
<ul>
<li>minsize - минимальная ширина/высота строки/столбца.</li>
<li>weight - "вес" строки/столбца при увеличении размера виджета. 0 означает, что строка/столбец не будет расширяться. Строка/столбец с "весом" равным 2 будет расширяться вдвое быстрее, чем с весом 1.</li>
<li>uniform - объединение строк/столбцов в группы. Строки/столбцы имеющие одинаковый параметр uniform будут расширяться строго в соответствии со своим весом.</li>
<li>pad - размер бордюра. Указывает, сколько пространства будет добавлено к самому большому виджету в строке/столбце.</li>
</ul>
</li>
</ul>
<p>Пример, текстовый виджет с двумя полосами прокрутки:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
text <span class="sy0">=</span> Text<span class="br0">(</span><span class="br0">)</span>
vscrollbar <span class="sy0">=</span> Scrollbar<span class="br0">(</span>orient<span class="sy0">=</span><span class="st0">'vert'</span><span class="sy0">,</span> command<span class="sy0">=</span>text.<span class="me1">yview</span><span class="br0">)</span>
text<span class="br0">[</span><span class="st0">'yscrollcommand'</span><span class="br0">]</span> <span class="sy0">=</span> vscrollbar.<span class="kw2">set</span>
hscrollbar <span class="sy0">=</span> Scrollbar<span class="br0">(</span>orient<span class="sy0">=</span><span class="st0">'hor'</span><span class="sy0">,</span> command<span class="sy0">=</span>text.<span class="me1">xview</span><span class="br0">)</span>
text<span class="br0">[</span><span class="st0">'xscrollcommand'</span><span class="br0">]</span> <span class="sy0">=</span> hscrollbar.<span class="kw2">set</span>
<span class="co1"># размещаем виджеты</span>
text.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span> column<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span> sticky<span class="sy0">=</span><span class="st0">'nsew'</span><span class="br0">)</span>
vscrollbar.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span> column<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span> sticky<span class="sy0">=</span><span class="st0">'ns'</span><span class="br0">)</span>
hscrollbar.<span class="me1">grid</span><span class="br0">(</span>row<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">,</span> column<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span> sticky<span class="sy0">=</span><span class="st0">'ew'</span><span class="br0">)</span>
<span class="co1"># конфигурируем упаковщик, чтобы текстовый виджет расширялся</span>
root.<span class="me1">rowconfigure</span><span class="br0">(</span><span class="nu0">0</span><span class="sy0">,</span> weight<span class="sy0">=</span><span class="nu0">1</span><span class="br0">)</span>
root.<span class="me1">columnconfigure</span><span class="br0">(</span><span class="nu0">0</span><span class="sy0">,</span> weight<span class="sy0">=</span><span class="nu0">1</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="place.28.29.5B10.5D">place()<sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=25" title="Редактировать раздел «place()[10]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>place представляет собой простой упаковщик, позволяющий размещать виджет в фиксированном месте с фиксированным размером. Также он позволяет указывать координаты размещения в относительных единицах для реализации "резинового" размещения. При использовании этого упаковщика, нам необходимо указывать координаты каждого виджета. Например:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
button1.<span class="me1">place</span><span class="br0">(</span>x<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span>y<span class="sy0">=</span><span class="nu0">0</span><span class="br0">)</span>
</pre></div>
</div>
<p>Этот упаковщик, хоть и кажется неудобным, предоставляет полную свободу в размещении виджетов на окне.</p>
<dl>
<dt>Аргументы</dt>
</dl>
<ul>
<li><b>anchor</b> ("n", "s", "e", "w", "ne", "nw", "se", "sw" или "center") - какой угол или сторона размещаемого виджета будет указана в аргументах x/y/relx/rely. По умолчанию "nw" - левый верхний угол.</li>
<li><b>bordermode</b> ("inside", "outside", "ignore") - определяет в какой степени будут учитываться границы при размещении виджета.</li>
<li><b>in_</b> - явное указание в какой родительский виджет должен быть помещён.</li>
<li><b>x</b> и <b>y</b> - абсолютные координаты (в пикселях) размещения виджета.</li>
<li><b>width</b> и <b>height</b> - абсолютные ширина и высота виджета.</li>
<li><b>relx</b> и <b>rely</b> - относительные координаты (от 0.0 до 1.0) размещения виджета.</li>
<li><b>relwidth</b> и <b>relheight</b> - относительные ширина и высота виджета.</li>
</ul>
<p>Относительные и абсолютные координаты (а также ширину и высоту) можно комбинировать. Так например, <tt>relx=0.5, x=-2</tt> означает размещение виджета в двух пикселях слева от центра родительского виджета, <tt>relheight=1.0, height=-2</tt> - высота виджета на два пикселя меньше высоты родительского виджета.</p>
<dl>
<dt>Дополнительные функции</dt>
</dl>
<p><b>place_slaves</b>, <b>place_forget</b>, <b>place_info</b> - см. описание аналогичных методов упаковщика pack.</p>
<h2><span class="mw-headline" id=".D0.9F.D1.80.D0.B8.D0.B2.D1.8F.D0.B7.D0.BA.D0.B0_.D1.81.D0.BE.D0.B1.D1.8B.D1.82.D0.B8.D0.B9">Привязка событий</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=26" title="Редактировать раздел «Привязка событий»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>"Всё это хорошо" - наверное, подумали вы - "Но как сделать так, чтобы мои виджеты что-то делали, а не просто красовались на окне?".</p>
<h3><span class="mw-headline" id="command">command</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=27" title="Редактировать раздел «command»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Для большинства виджетов, реагирующих на действие пользователя, активацию виджета (например нажатие кнопки) можно привязать с использованием опции <tt>command</tt>. К таким виджетам относятся: Button, Checkbutton, Radiobutton, Spinbox, Scrollbar, Scale. Выше мы уже неоднократно пользовались этим способом:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
button <span class="sy0">=</span> Button<span class="br0">(</span>command<span class="sy0">=</span>callback<span class="br0">)</span>
</pre></div>
</div>
<p>Такой способ является предпочтительным и наиболее удобным способом привязки.</p>
<h3><span class="mw-headline" id="bind.28.29.5B1.5D">bind()<a rel="nofollow" class="external autonumber" href="http://www.tcl.tk/man/tcl8.5/TkCmd/bind.htm">[1]</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=28" title="Редактировать раздел «bind()[1]»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Метод bind привязывает событие к какому-либо действию (нажатие кнопки мыши, нажатие клавиши на клавиатуре и т.д.). bind принимает три аргумента:</p>
<ul>
<li>название события</li>
<li>функцию, которая будет вызвана при наступлении события</li>
<li>третий аргумент (необязательный) - строка "+" - означает, что эта привязка добавляется к уже существующим. Если третий аргумент опущен или равен пустой строке - привязка замещает все другие привязки данного события к виджету.</li>
</ul>
<p>Метод bind возвращает идентификатор привязки, который может быть использован в функции unbind.</p>
<p>Обратите внимание, что если bind привязан к окну верхнего уровня, то Tkinter будет обрабатывать события всех виджетов этого окна (см. также bind_all ниже).</p>
<p>Функция, которая вызывается при наступлении события, должна принимать один аргумент. Это объект класса Event, в котором описано наступившее событие. Объект класса Event имеет следующие атрибуты (в скобках указаны события, для которых этот атрибут установлен):</p>
<ul>
<li><b>serial</b> - серийный номер события (все события)</li>
<li><b>num</b> - номер кнопки мыши (ButtonPress, ButtonRelease)</li>
<li><b>focus</b> - имеет ли окно фокус (Enter, Leave)</li>
<li><b>height</b> и <b>width</b> - ширина и высота окна (Configure, Expose)</li>
<li><b>keycode</b> - код нажатой клавиши (KeyPress, KeyRelease)</li>
<li><b>state</b> - состояние события (для ButtonPress, ButtonRelease, Enter, KeyPress, КeyRelease, Leave, Motion - в виде числа; для Visibility - в виде строки)</li>
<li><b>time</b> - время наступления события (все события)</li>
<li><b>x</b> и <b>y</b> - координаты мыши</li>
<li><b>x_root</b> и <b>y_root</b> - координаты мыши на экране (ButtonPress, ButtonRelease, KeyPress, KeyRelease, Motion)</li>
<li><b>char</b> - набранный на клавиатуре символ (KeyPress, KeyRelease)</li>
<li><b>send_event</b> - см. документацию по X/Windows</li>
<li><b>keysym</b> - набранный на клавиатуре символ (KeyPress, KeyRelease)</li>
<li><b>keysym_num</b> - набранный на клавиатуре символ в виде числа (KeyPress, KeyRelease)</li>
<li><b>type</b> - тип события в виде числа (все события)</li>
<li><b>widget</b> - виджет, который получил событие (все события)</li>
<li><b>delta</b> - изменение при вращении колеса мыши (MouseWheel)</li>
</ul>
<p>Эта функция может возвращать строки "continue" и "break". Если функция возвращает "continue" то Tkinter продолжит обработку других привязок этого события, если "break" - обработка этого события прекращается. Если функция ничего не возвращает (если возвращает None), то обработка событий продолжается (т.е. это эквивалентно возвращению "continue").</p>
<dl>
<dt>Названия событий</dt>
</dl>
<p>Есть три формы названия событий. Самый простой случай это символ ASCII. Так описываются события нажатия клавиш на клавиатуре:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
widget.<span class="me1">bind</span><span class="br0">(</span><span class="st0">"z"</span><span class="sy0">,</span> callback<span class="br0">)</span>
</pre></div>
</div>
<p>callback вызывается каждый раз, когда будет нажата клавиша "z".</p>
<p>Второй способ длиннее, но позволяет описать больше событий. Он имеет следующий синтаксис:</p>
<pre>
&lt;modifier-modifier-type-detail&gt;
</pre>
<p>Название события заключено в угловые скобки. Внутри имеются ноль или более модификаторов, тип события и дополнительная информация (номер нажатой клавиши мыши или символ клавиатуры) Поля разделяются дефисом или пробелом. Пример (привязываем одновременное нажатие Ctrl+Shift+q):</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
widget.<span class="me1">bind</span><span class="br0">(</span><span class="st0">"&lt;Control-Shift-KeyPress-q&gt;"</span><span class="sy0">,</span> callback<span class="br0">)</span>
</pre></div>
</div>
<p>(в данном примере <tt>KeyPress</tt> можно убрать).</p>
<p>Третий способ позволяет привязывать виртуальные события - события, которые генерируются самим приложением. Такие события можно создавать самим, а потом привязывать их. Имена таких событий помещаются в двойные угловые скобки: <tt>&lt;&lt;Paste&gt;&gt;</tt>. Есть некоторое количество уже определённых виртуальных событий.</p>
<dl>
<dt>Список модификаторов</dt>
</dl>
<ul>
<li><b>Control</b></li>
<li><b>Alt</b></li>
<li><b>Shift</b></li>
<li><b>Lock</b></li>
<li><b>Extended</b></li>
<li><b>Button1, B1</b> - нажата первая (левая) кнопка мыши</li>
<li><b>Button2, B2</b> - вторая (средняя) кнопка мыши</li>
<li><b>Button3, B3</b> - третья (правая)</li>
<li><b>Button4, B4</b> - четвёртая</li>
<li><b>Button5, B5</b> - пятая</li>
<li><b>Mod1, M1, Command</b></li>
<li><b>Mod2, M2, Option</b></li>
<li><b>Mod3, M3</b></li>
<li><b>Mod4, M4</b></li>
<li><b>Mod5, M5</b></li>
<li><b>Meta, M</b></li>
<li><b>Double</b> - двойной щелчок мыши (например, &lt;Double-Button-1&gt;)</li>
<li><b>Triple</b> - тройной</li>
<li><b>Quadruple</b> - четверной</li>
</ul>
<dl>
<dt>Типы событий</dt>
</dl>
<p>Здесь перечислены все возможные типы событий, для самых часто используемых дано описание. Более подробно см. <a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/bind.htm#M7">man bind</a>.</p>
<ul>
<li><b>Activate, Deactivate</b></li>
<li><b>MouseWheel</b> - прокрутка колесом мыши</li>
<li><b>KeyPress, KeyRelease</b> - нажатие и отпускание клавиши на клавиатуре</li>
<li><b>ButtonPress, ButtonRelease, Motion</b> - нажатие, отпускание клавиши мыши, движение мышью</li>
<li><b>Configure</b> - изменение положения или размера окна</li>
<li><b>Map, Unmap</b> - показывание или сокрытие окна (например, в случае сворачивания/разворачивания окна пользователем)</li>
<li><b>Visibility</b></li>
<li><b>Expose</b> - событие генерируется, когда необходимо всё окно или его часть перерисовать</li>
<li><b>Destroy</b> - закрытие окна</li>
<li><b>FocusIn, FocusOut</b> - получение или лишение фокуса</li>
<li><b>Enter, Leave</b> - Enter генерируется когда курсор мыши "входит" в окно, Leave - когда "уходит" из окна</li>
<li><b>Property</b></li>
<li><b>Colormap</b></li>
<li><b>MapRequest, CirculateRequest, ResizeRequest, ConfigureRequest, Create</b></li>
<li><b>Gravity, Reparent, Circulate</b></li>
</ul>
<dl>
<dt>Клавиатурные символы</dt>
</dl>
<p>Полный список см. <a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/keysyms.htm">man keysyms</a>.</p>
<dl>
<dt>Примеры</dt>
</dl>
<p><tt>&lt;Button-1&gt;</tt> или <tt>&lt;1&gt;</tt> - нажата левая клавиша мыши.</p>
<p><tt>&lt;Alt-Motion&gt;</tt> - движение мышью с нажатой на клавиатуре клавишей Alt.</p>
<p><tt>&lt;Key&gt;</tt> - нажатие любой клавиши на клавиатуре.</p>
<p>Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
<span class="kw1">def</span> leftclick<span class="br0">(</span>event<span class="br0">)</span>:
    <span class="kw1">print</span> u<span class="st0">'Вы нажали левую кнопку мыши'</span>
<span class="kw1">def</span> rightclick<span class="br0">(</span>event<span class="br0">)</span>:
    <span class="kw1">print</span> u<span class="st0">'Вы нажали правую кнопку мыши'</span>
button1<span class="sy0">=</span>Button<span class="br0">(</span>root<span class="sy0">,</span> text<span class="sy0">=</span>u<span class="st0">'Нажми'</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button1.<span class="me1">bind</span><span class="br0">(</span><span class="st0">'&lt;Button-1&gt;'</span><span class="sy0">,</span> leftclick<span class="br0">)</span>
button1.<span class="me1">bind</span><span class="br0">(</span><span class="st0">'&lt;Button-3&gt;'</span><span class="sy0">,</span> rightclick<span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<dl>
<dt>Дополнительные методы</dt>
</dl>
<ul>
<li><b>bind_all</b> - создаёт привязку для всех виджетов приложения. Отличие от привязки к окну верхнего уровня заключается в том, что в случае привязки к окну привязываются все виджеты этого окна, а этот метод привязывает все виджеты приложения (у приложения может быть несколько окон).</li>
<li><b>bind_class</b> - создаёт привязку для всех виджетов данного класса</li>
</ul>
<p>Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">def</span> callback<span class="br0">(</span>e<span class="br0">)</span>:
    <span class="kw1">print</span> u<span class="st0">'Нажата кнопка'</span><span class="sy0">,</span> e.<span class="me1">widget</span><span class="br0">[</span><span class="st0">'text'</span><span class="br0">]</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
button1 <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="sy0">,</span> text<span class="sy0">=</span><span class="st0">'1'</span><span class="br0">)</span>
button1.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button2 <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="sy0">,</span> text<span class="sy0">=</span><span class="st0">'2'</span><span class="br0">)</span>
button2.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">bind_class</span><span class="br0">(</span><span class="st0">'Button'</span><span class="sy0">,</span> <span class="st0">'&lt;1&gt;'</span><span class="sy0">,</span> callback<span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<ul>
<li><b>bindtags</b> - позволяет изменить порядок обработки привязок. По умолчанию порядок следующий: виджет, класс, окно, all; где виджет - привязка к виджету (bind), класс - привязка к классу (bind_class), окно - привязка к окну (root.bind), all - привязка всех виджетов (bind_all).</li>
</ul>
<p>Пример, меняем порядок обработки привязок на обратный:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
<span class="kw1">def</span> callback1<span class="br0">(</span>e<span class="br0">)</span>: <span class="kw1">print</span> <span class="st0">'callback1'</span>
<span class="kw1">def</span> callback2<span class="br0">(</span>e<span class="br0">)</span>: <span class="kw1">print</span> <span class="st0">'callback2'</span>
<span class="kw1">def</span> callback3<span class="br0">(</span>e<span class="br0">)</span>: <span class="kw1">print</span> <span class="st0">'callback3'</span>
<span class="kw1">def</span> callback4<span class="br0">(</span>e<span class="br0">)</span>: <span class="kw1">print</span> <span class="st0">'callback4'</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
button <span class="sy0">=</span> Button<span class="br0">(</span>root<span class="br0">)</span>
button.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
button.<span class="me1">bind</span><span class="br0">(</span><span class="st0">'&lt;1&gt;'</span><span class="sy0">,</span> callback1<span class="br0">)</span>
root.<span class="me1">bind_class</span><span class="br0">(</span><span class="st0">'Button'</span><span class="sy0">,</span> <span class="st0">'&lt;1&gt;'</span><span class="sy0">,</span> callback2<span class="br0">)</span>
root.<span class="me1">bind</span><span class="br0">(</span><span class="st0">'&lt;1&gt;'</span><span class="sy0">,</span> callback3<span class="br0">)</span>
root.<span class="me1">bind_all</span><span class="br0">(</span><span class="st0">'&lt;1&gt;'</span><span class="sy0">,</span> callback4<span class="br0">)</span>
button.<span class="me1">bindtags</span><span class="br0">(</span><span class="br0">(</span><span class="st0">'all'</span><span class="sy0">,</span> root<span class="sy0">,</span> <span class="st0">'Button'</span><span class="sy0">,</span> button<span class="br0">)</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<ul>
<li><b>unbind</b> - отвязать виджет от события. В качестве аргумента принимает идентификатор, полученный от метода bind.</li>
<li><b>unbind_all</b> - то же, что и unbind, только для метода bind_all.</li>
<li><b>unbind_class</b> - то же, что и unbind, только для метода bind_class.</li>
</ul>
<h2><span class="mw-headline" id=".D0.98.D0.B7.D0.BE.D0.B1.D1.80.D0.B0.D0.B6.D0.B5.D0.BD.D0.B8.D1.8F">Изображения</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=29" title="Редактировать раздел «Изображения»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Для работы с изображениями в Tkinter имеется два класса BitmapImage и PhotoImage. BitmapImage представляет собой простое двухцветное изображение, PhotoImage - полноцветное изображение.</p>
<h3><span class="mw-headline" id="BitmapImage">BitmapImage</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=30" title="Редактировать раздел «BitmapImage»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Конструктор класса принимает следующие аргументы:</p>
<ul>
<li>background и foreground - цвета фона и переднего плана для изображения. Поскольку изображение двухцветное, то эти параметры определяют соответственно чёрный и белый цвет.</li>
<li>file и maskfile - пути к файлу с изображением и к маске (изображению, указывающему какие пиксели будут прозрачными).</li>
<li>data и maskdata - вместо пути к файлу можно указать уже загруженные в память данные изображения. Данная возможность удобна для встраивания изображения в программу.</li>
</ul>
<p>Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">from</span> <span class="kw3">Tkinter</span> <span class="kw1">import</span> *
data <span class="sy0">=</span> <span class="st0">'''#define image_width 15
#define image_height 15
static unsigned char image_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x30, 0x0c, 0x60, 0x06,
   0x60, 0x06, 0xc0, 0x03, 0xc0, 0x03, 0x60, 0x06, 0x60, 0x06, 0x30, 0x0c,
   0x38, 0x1c, 0x00, 0x00, 0x00, 0x00 };'''</span>
root<span class="sy0">=</span>Tk<span class="br0">(</span><span class="br0">)</span>
image <span class="sy0">=</span> BitmapImage<span class="br0">(</span>data<span class="sy0">=</span>data<span class="sy0">,</span> background<span class="sy0">=</span><span class="st0">'red'</span><span class="sy0">,</span> foreground<span class="sy0">=</span><span class="st0">'green'</span><span class="br0">)</span>
button<span class="sy0">=</span>Button<span class="br0">(</span>root<span class="sy0">,</span> image<span class="sy0">=</span>image<span class="br0">)</span>
button.<span class="me1">pack</span><span class="br0">(</span><span class="br0">)</span>
root.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="PhotoImage">PhotoImage</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=31" title="Редактировать раздел «PhotoImage»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>PhotoImage позволяет использовать полноцветное изображение. Кроме того у этого класса есть несколько (достаточно примитивных) методов для работы с изображениями. PhotoImage гарантированно понимает форматы GIF и PPM/PGM (под Windows дополнительно PNG).</p>
<p>Аргументы конструктора:</p>
<ul>
<li><b>file</b> - путь к файлу с изображением.</li>
<li><b>data</b> - вместо пути к файлу можно указать уже загруженные в память данные изображения. Изображения в формате GIF могут быть закодированы с использование base64. Данная возможность удобна для встраивания изображения в программу.</li>
<li><b>format</b> - явное указание формата изображения.</li>
<li><b>width</b>, <b>height</b> - ширина и высота изображения.</li>
<li><b>gamma</b> - коррекция гаммы.</li>
<li><b>palette</b> - палитра изображения.</li>
</ul>
<h2><span class="mw-headline" id="ttk">ttk</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=32" title="Редактировать раздел «ttk»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>ttk (themed tk) это расширение tcl/tk с новым набором виджетов. В ttk используется новый движок для создания виджетов. Этот движок обладает поддержкой тем и стилей оформления. Благодаря этому виджеты ttk выглядят более естественно в различных операционных системах.</p>
<p>Начиная с версий python 2.7 и 3.1.2 в Tkinter включён модуль для работы с ttk.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:284px;"><a href="/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:Tkinter-ttk-clam.png" class="image"><img alt="" src="//upload.wikimedia.org/wikiversity/ru/0/02/Tkinter-ttk-clam.png" width="282" height="365" class="thumbimage" /></a>
<div class="thumbcaption">Внешний вид некоторых виджетов ttk, используется тема clam</div>
</div>
</div>
<p>В ttk включены следующие виджеты, которые можно использовать вместо соответствующих виджетов tk: Button, Checkbutton, Entry, Frame, Label, LabelFrame, Menubutton, PanedWindow, Radiobutton, Scale и Scrollbar. Кроме того имеется несколько новых виджетов: Combobox, Notebook, Progressbar, Separator, Sizegrip и Treeview.</p>
<p>Поскольку это относительно новая возможность Tkinter, несколько слов об установке этого модуля. Версии python 2.7/3.1.2 и старше уже имеют в своём составе этот модуль. Для использования ttk с более ранними версиями python, его нужно установить самостоятельно. <a rel="nofollow" class="external text" href="http://code.google.com/p/python-ttk/">Домашняя страница модуля</a>. В данный момент python-ttk хостится в svn python.org. Модуль представляет собой один файл - ttk.py, который нужно положить в каталог, где его сможет найти python. Прямые ссылки для скачивания: <a rel="nofollow" class="external text" href="http://svn.python.org/view/*checkout*/sandbox/trunk/ttk-gsoc/src/2.x/ttk.py">для версии 2.x</a>, <a rel="nofollow" class="external text" href="http://svn.python.org/view/*checkout*/sandbox/trunk/ttk-gsoc/src/3.x/ttk.py">для версии 3.x</a>.</p>
<p>С точки зрения программиста главное отличие новых виджетов от старых заключается в том, что у виджетов ttk отсутствуют опции для конфигурирования его внешнего вида. Сравните, например, количество STANDARD OPTIONS для <a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/button.htm">старого</a> и <a rel="nofollow" class="external text" href="http://www.tcl.tk/man/tcl8.5/TkCmd/ttk_button.htm">нового</a> виджета button. Конфигурация внешнего вида виджетов ttk осуществляется через темы и стили. В остальном использование виджетов ttk аналогично соответствующим виджетам tk.</p>
<p>ttk имеет четыре встроенных темы: default, classic, alt, clam. Кроме того дополнительно под Windows есть темы winnative, xpnative и vista, а под Mac OS X - aqua.</p>
<h3><span class="mw-headline" id="Style">Style</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=33" title="Редактировать раздел «Style»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Style это класс для работы со стилями и темами. Именно этот класс надо использовать для конфигурирования внешнего вида виджетов. Основные методы класса:</p>
<dl>
<dt>configure</dt>
</dl>
<p>Конфигурирование внешнего вида виджетов. В качестве аргументов принимает название стиля виджета (например "TButton") и список опций конфигурирования. Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
style.<span class="me1">configure</span><span class="br0">(</span><span class="st0">"TButton"</span><span class="sy0">,</span> padding<span class="sy0">=</span><span class="nu0">6</span><span class="sy0">,</span> relief<span class="sy0">=</span><span class="st0">"flat"</span><span class="sy0">,</span> background<span class="sy0">=</span><span class="st0">"#ccc"</span><span class="br0">)</span>
</pre></div>
</div>
<dl>
<dt>map</dt>
</dl>
<p>Конфигурирование внешнего вида виджетов в зависимости от их состояний (active, pressed, disabled и т.д.). В качестве аргументов принимает название стиля виджета и список опций конфигурирования, где опции представлены в виде списка. Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
style.<span class="kw2">map</span><span class="br0">(</span><span class="st0">"C.TButton"</span><span class="sy0">,</span>
    foreground<span class="sy0">=</span><span class="br0">[</span><span class="br0">(</span><span class="st0">'pressed'</span><span class="sy0">,</span> <span class="st0">'red'</span><span class="br0">)</span><span class="sy0">,</span> <span class="br0">(</span><span class="st0">'active'</span><span class="sy0">,</span> <span class="st0">'blue'</span><span class="br0">)</span><span class="br0">]</span><span class="sy0">,</span>
    background<span class="sy0">=</span><span class="br0">[</span><span class="br0">(</span><span class="st0">'pressed'</span><span class="sy0">,</span> <span class="st0">'!disabled'</span><span class="sy0">,</span> <span class="st0">'black'</span><span class="br0">)</span><span class="sy0">,</span> <span class="br0">(</span><span class="st0">'active'</span><span class="sy0">,</span> <span class="st0">'white'</span><span class="br0">)</span><span class="br0">]</span>
    <span class="br0">)</span>
</pre></div>
</div>
<dl>
<dt>lookup</dt>
</dl>
<p>Возвращает соответствующую опцию конфигурирования. Пример:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
style.<span class="me1">lookup</span><span class="br0">(</span><span class="st0">"TButton"</span><span class="sy0">,</span> <span class="st0">"font"</span><span class="br0">)</span>
</pre></div>
</div>
<dl>
<dt>layout</dt>
</dl>
<p>Изменяет layout (схему) виджета. Виджеты ttk состоят из отдельных элементов, опций конфигурирования и других вложенных layouts. Следующий пример иллюстрирует применение метода layout:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
style.<span class="me1">layout</span><span class="br0">(</span><span class="st0">"TMenubutton"</span><span class="sy0">,</span> <span class="br0">[</span>
   <span class="br0">(</span><span class="st0">"Menubutton.background"</span><span class="sy0">,</span> <span class="kw2">None</span><span class="br0">)</span><span class="sy0">,</span>
   <span class="br0">(</span><span class="st0">"Menubutton.button"</span><span class="sy0">,</span> <span class="br0">{</span><span class="st0">"children"</span>:
       <span class="br0">[</span><span class="br0">(</span><span class="st0">"Menubutton.focus"</span><span class="sy0">,</span> <span class="br0">{</span><span class="st0">"children"</span>:
           <span class="br0">[</span><span class="br0">(</span><span class="st0">"Menubutton.padding"</span><span class="sy0">,</span> <span class="br0">{</span><span class="st0">"children"</span>:
               <span class="br0">[</span><span class="br0">(</span><span class="st0">"Menubutton.label"</span><span class="sy0">,</span> <span class="br0">{</span><span class="st0">"side"</span>: <span class="st0">"left"</span><span class="sy0">,</span> <span class="st0">"expand"</span>: <span class="nu0">1</span><span class="br0">}</span><span class="br0">)</span><span class="br0">]</span>
           <span class="br0">}</span><span class="br0">)</span><span class="br0">]</span>
       <span class="br0">}</span><span class="br0">)</span><span class="br0">]</span>
   <span class="br0">}</span><span class="br0">)</span><span class="sy0">,</span>
<span class="br0">]</span><span class="br0">)</span>
</pre></div>
</div>
<dl>
<dt>element_create</dt>
</dl>
<p>Создаёт новый элемент темы.</p>
<dl>
<dt>element_names</dt>
</dl>
<p>Возвращает список элементов текущей темы.</p>
<dl>
<dt>element_options</dt>
</dl>
<p>Возвращает список опций (конфигурацию), указанного в аргументе элемента.</p>
<dl>
<dt>theme_create</dt>
</dl>
<p>Создаёт новую тему. Аргументы те же, что и в theme_settings.</p>
<dl>
<dt>theme_settings</dt>
</dl>
<p>Конфигурирует существующую тему. Первый аргумент - название темы, второй аргумент - словарь, ключами которого являются названия стилей (TButton и т.п.), а значениями - layout соответствующего стиля.</p>
<dl>
<dt>theme_names</dt>
</dl>
<p>Возвращает список доступных тем.</p>
<dl>
<dt>theme_use</dt>
</dl>
<p>Изменяет текущую тему на указанную в аргументе.</p>
<h3><span class="mw-headline" id="Combobox">Combobox</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=34" title="Редактировать раздел «Combobox»">править</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Виджет Combobox предназначен для отображения списка значений, их выбора или изменения пользователем. В версии tk ему подобен виджет Listbox. Разница заключается в том, что Combobox имеет возможность сворачиваться подобно свитку, а Listbox будет оборажаться всегда открытым. Что бы отобразить Combobox с заранее заданными значениями в форме, достаточно сделать следующее:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">import</span> <span class="kw3">Tkinter</span>
<span class="kw1">from</span> ttk <span class="kw1">import</span> *
tk <span class="sy0">=</span> <span class="kw3">Tkinter</span>.<span class="me1">Tk</span><span class="br0">(</span><span class="br0">)</span>
frame <span class="sy0">=</span> Frame<span class="br0">(</span>tk<span class="br0">)</span>
frame.<span class="me1">grid</span><span class="br0">(</span><span class="br0">)</span>
combobox <span class="sy0">=</span> Combobox<span class="br0">(</span>frame<span class="sy0">,</span>values <span class="sy0">=</span> <span class="br0">[</span>u<span class="st0">"ОДИН"</span><span class="sy0">,</span>u<span class="st0">"ДВА"</span><span class="sy0">,</span>u<span class="st0">"ТРИ"</span><span class="br0">]</span><span class="sy0">,</span>height<span class="sy0">=</span><span class="nu0">3</span><span class="br0">)</span>
<span class="co1">#frame - задает родительский виджет, на его территории будет располагаться Combobox</span>
<span class="co1">#values - задает набор значений, которые будут содержаться в Combobox изначально</span>
<span class="co1">#height - задает высоту выпадающего списка. Если число элементов списка меньше 11, то можно не задавать.</span>
<span class="co1">#Если не задано при колличестве элементов больше 10, то с правой стороны появится полоса прокрутки.</span>
<span class="co1">#Если в нашем примере задать значение height меньше трех, то с правой стороны появится полоса прокрутки,</span>
<span class="co1">#но она будет недоступна, а все элементы будут отображаться одновременно.</span>
combobox.<span class="kw2">set</span><span class="br0">(</span>u<span class="st0">"ОДИН"</span><span class="br0">)</span><span class="co1">#спомощью этой строчки мы установим Combobox в значение ОДИН изначально</span>
combobox.<span class="me1">grid</span><span class="br0">(</span>column<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">,</span>row<span class="sy0">=</span><span class="nu0">0</span><span class="br0">)</span><span class="co1">#Позиционируем Combobox на форме</span>
tk.<span class="me1">mainloop</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<h2><span class="mw-headline" id=".D0.9F.D1.80.D0.B8.D0.BC.D0.B5.D1.87.D0.B0.D0.BD.D0.B8.D1.8F">Примечания</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=35" title="Редактировать раздел «Примечания»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="references-small" style="">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><a href="#cite_ref-1">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/grab.htm">http://www.tcl.tk/man/tcl8.5/TkCmd/grab.htm</a></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><a href="#cite_ref-2">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/focus.htm">http://www.tcl.tk/man/tcl8.5/TkCmd/focus.htm</a></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><a href="#cite_ref-3">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TclCmd/after.htm">http://www.tcl.tk/man/tcl8.5/TclCmd/after.htm</a></span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><a href="#cite_ref-4">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TclCmd/update.htm">http://www.tcl.tk/man/tcl8.5/TclCmd/update.htm</a></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><a href="#cite_ref-5">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/toplevel.htm">http://www.tcl.tk/man/tcl8.5/TkCmd/toplevel.htm</a></span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><a href="#cite_ref-6">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/pack.htm">http://www.tcl.tk/man/tcl8.5/TkCmd/pack.htm</a></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><a href="#cite_ref-7">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/pack.htm#M28">http://www.tcl.tk/man/tcl8.5/TkCmd/pack.htm#M28</a></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><a href="#cite_ref-8">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/grid.htm">http://www.tcl.tk/man/tcl8.5/TkCmd/grid.htm</a></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><a href="#cite_ref-9">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/grid.htm#M7">http://www.tcl.tk/man/tcl8.5/TkCmd/grid.htm#M7</a></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><a href="#cite_ref-10">↑</a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.tcl.tk/man/tcl8.5/TkCmd/place.htm">http://www.tcl.tk/man/tcl8.5/TkCmd/place.htm</a></span></li>
</ol>
</div>
<h2><span class="mw-headline" id=".D0.A1.D1.81.D1.8B.D0.BB.D0.BA.D0.B8">Ссылки</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit&amp;section=36" title="Редактировать раздел «Ссылки»">править</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.pythonware.com/library/tkinter/introduction/">An Introduction to Tkinter (англ.)</a> — хорошее дополнение к документации</li>
<li><a rel="nofollow" class="external text" href="http://www.intuit.ru/department/pl/python/12/">Роман Сузи. Tkinter в рамках интерактивного курса «Язык программирования Python»</a></li>
<li><a rel="nofollow" class="external text" href="http://www.russianlutheran.org/python/python.html">Несколько статей на русском</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1174
CPU time usage: 0.596 seconds
Real time usage: 0.627 seconds
Preprocessor visited node count: 705/1000000
Preprocessor generated node count: 1821/1500000
Post‐expand include size: 142/2048000 bytes
Template argument size: 0/2048000 bytes
Highest expansion depth: 4/40
Expensive parser function count: 0/500
-->

<!-- Saved in parser cache with key ruwikiversity:pcache:idhash:1616-0!*!*!!ru!4!* and timestamp 20140115212312
 -->
<noscript><img src="//ru.wikiversity.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Источник — «<a href="http://ru.wikiversity.org/w/index.php?title=Курс_по_библиотеке_Tkinter_языка_Python&amp;oldid=96647">http://ru.wikiversity.org/w/index.php?title=Курс_по_библиотеке_Tkinter_языка_Python&amp;oldid=96647</a>»				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%9A%D0%B0%D1%82%D0%B5%D0%B3%D0%BE%D1%80%D0%B8%D0%B8" title="Служебная:Категории">Категория</a>: <ul><li><a href="/wiki/%D0%9A%D0%B0%D1%82%D0%B5%D0%B3%D0%BE%D1%80%D0%B8%D1%8F:Python" title="Категория:Python">Python</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Навигация</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Персональные инструменты</h3>
	<ul>
<li id="pt-createaccount"><a href="/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%92%D1%85%D0%BE%D0%B4&amp;returnto=%D0%9A%D1%83%D1%80%D1%81+%D0%BF%D0%BE+%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5+Tkinter+%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0+Python&amp;type=signup">Создать учётную запись</a></li><li id="pt-login"><a href="/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%92%D1%85%D0%BE%D0%B4&amp;returnto=%D0%9A%D1%83%D1%80%D1%81+%D0%BF%D0%BE+%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5+Tkinter+%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0+Python" title="Здесь можно зарегистрироваться в системе, но это необязательно. [o]" accesskey="o">Представиться системе</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Пространства имён</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python"  title="Просмотр основной страницы [c]" accesskey="c">Статья</a></span></li>
					<li  id="ca-talk"><span><a href="/wiki/%D0%9E%D0%B1%D1%81%D1%83%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5:%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python"  title="Обсуждение основной страницы [t]" accesskey="t">Обсуждение</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Варианты</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Просмотры</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/wiki/%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python" >Читать</a></span></li>
					<li id="ca-edit"><span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=edit"  title="Вы можете редактировать эту страницу. Перед тем, как записать свои изменения, воспользуйтесь, пожалуйста, кнопкой предварительного просмотра. [e]" accesskey="e">Править</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=history"  title="Журнал изменений страницы [h]" accesskey="h">История</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Действия</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Поиск</label></h3>
	<form action="/w/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" placeholder="Поиск" title="Искать в Викиверситет [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Найти страницы, содержащие указанный текст" id="searchButton"><img src="//bits.wikimedia.org/static-1.23wmf10/skins/vector/images/search-ltr.png?303-4" alt="Найти" width="12" height="13" /></button>								<input type='hidden' name="title" value="Служебная:Поиск"/>
		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(//upload.wikimedia.org/wikiversity/ru/b/bc/Wiki.png);" href="/wiki/%D0%97%D0%B0%D0%B3%D0%BB%D0%B0%D0%B2%D0%BD%D0%B0%D1%8F_%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0"  title="Перейти на заглавную страницу"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Навигация</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/wiki/%D0%97%D0%B0%D0%B3%D0%BB%D0%B0%D0%B2%D0%BD%D0%B0%D1%8F_%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0" title="Перейти на заглавную страницу [z]" accesskey="z">Заглавная страница</a></li>
			<li id="n-portal"><a href="/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82:%D0%9F%D0%BE%D1%80%D1%82%D0%B0%D0%BB_%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0" title="О проекте, о том, чем здесь можно заниматься, а также — где что находится">Портал сообщества</a></li>
			<li id="n-currentevents"><a href="/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82:%D0%A2%D0%B5%D0%BA%D1%83%D1%89%D0%B8%D0%B5_%D1%81%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D1%8F" title="Информация о текущих событиях">Текущие события</a></li>
			<li id="n-recentchanges"><a href="/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D0%B2%D0%B5%D0%B6%D0%B8%D0%B5_%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8" title="Список последних изменений [r]" accesskey="r">Свежие правки</a></li>
			<li id="n-randompage"><a href="/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D0%BB%D1%83%D1%87%D0%B0%D0%B9%D0%BD%D0%B0%D1%8F_%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D0%B0" title="Посмотреть случайно выбранную страницу [x]" accesskey="x">Случайная статья</a></li>
			<li id="n-help"><a href="/wiki/%D0%A1%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B0:%D0%A1%D0%BE%D0%B4%D0%B5%D1%80%D0%B6%D0%B0%D0%BD%D0%B8%D0%B5" title="Место, где можно получить справку">Справка</a></li>
			<li id="n-sitesupport"><a href="//donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_ru.wikiversity.org&amp;uselang=ru" title="Поддержите нас">Пожертвования</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Печать/экспорт</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%9A%D0%BE%D0%BB%D0%BB%D0%B5%D0%BA%D1%86%D0%B8%D1%8F_%D0%BA%D0%BD%D0%B8%D0%B3&amp;bookcmd=book_creator&amp;referer=%D0%9A%D1%83%D1%80%D1%81+%D0%BF%D0%BE+%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5+Tkinter+%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0+Python">Создать книгу</a></li>
			<li id="coll-download-as-rl"><a href="/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%9A%D0%BE%D0%BB%D0%BB%D0%B5%D0%BA%D1%86%D0%B8%D1%8F_%D0%BA%D0%BD%D0%B8%D0%B3&amp;bookcmd=render_article&amp;arttitle=%D0%9A%D1%83%D1%80%D1%81+%D0%BF%D0%BE+%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5+Tkinter+%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0+Python&amp;oldid=96647&amp;writer=rl">Скачать как PDF</a></li>
			<li id="t-print"><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;printable=yes" title="Версия этой страницы для печати [p]" accesskey="p">Версия для печати</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Инструменты</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D1%81%D1%8B%D0%BB%D0%BA%D0%B8_%D1%81%D1%8E%D0%B4%D0%B0/%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python" title="Список всех страниц, ссылающихся на данную [j]" accesskey="j">Ссылки сюда</a></li>
			<li id="t-recentchangeslinked"><a href="/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D0%B2%D1%8F%D0%B7%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5_%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8/%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python" title="Последние изменения в страницах, на которые ссылается эта страница [k]" accesskey="k">Связанные правки</a></li>
			<li id="t-specialpages"><a href="/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A1%D0%BF%D0%B5%D1%86%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D1%8B" title="Список служебных страниц [q]" accesskey="q">Спецстраницы</a></li>
			<li id="t-permalink"><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;oldid=96647" title="Постоянная ссылка на эту версию страницы">Постоянная ссылка</a></li>
			<li id="t-info"><a href="/w/index.php?title=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;action=info">Сведения о странице</a></li>
<li id="t-cite"><a href="/w/index.php?title=%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:%D0%A6%D0%B8%D1%82%D0%B0%D1%82%D0%B0&amp;page=%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python&amp;id=96647" title="Информация о том, как цитировать эту страницу">Цитировать страницу</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>На других языках</h3>
	<div class="body">
		<ul>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> Последнее изменение этой страницы: 15:34, 25 декабря 2013.</li>
											<li id="footer-info-copyright">Текст доступен по <a href="https://creativecommons.org/licenses/by-sa/3.0/deed.ru">лицензии Creative Commons Attribution/Share-Alike</a>, в отдельных случаях могут действовать дополнительные условия. Подробнее см. <a href="https://wikimediafoundation.org/wiki/Terms_of_Use/ru">Условия использования</a>.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82:%D0%9F%D0%BE%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0_%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B4%D0%B5%D0%BD%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8" title="Викиверситет:Политика конфиденциальности">Политика конфиденциальности</a></li>
											<li id="footer-places-about"><a href="/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82:%D0%9E%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5" title="Викиверситет:Описание">Описание Викиверситет</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/%D0%92%D0%B8%D0%BA%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%82%D0%B5%D1%82:%D0%9E%D1%82%D0%BA%D0%B0%D0%B7_%D0%BE%D1%82_%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8" title="Викиверситет:Отказ от ответственности">Отказ от ответственности</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Разработчики</a></li>
											<li id="footer-places-mobileview"><a href="//ru.m.wikiversity.org/wiki/%D0%9A%D1%83%D1%80%D1%81_%D0%BF%D0%BE_%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B5_Tkinter_%D1%8F%D0%B7%D1%8B%D0%BA%D0%B0_Python" class="noprint stopMobileRedirectToggle">Мобильная версия</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="//wikimediafoundation.org/"><img src="//bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="//www.mediawiki.org/"><img src="//bits.wikimedia.org/static-1.23wmf10/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","mw.MwEmbedSupport.style","ext.wikimediaEvents.moduleStorage","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","mw.PopUpMediaTransform","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="//bits.wikimedia.org/ru.wikiversity.org/load.php?debug=false&amp;lang=ru&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1187 in 0.126 secs. -->
	</body>
</html>
