создадим форму, которая будет загружать граф.файлы и помещать инфу об них в отдельную табличку.
с этой табличкой свяжем табличку user и будем добавлять так же user_id

==================
create_table "users", force: :cascade do |t|
  t.string   "email",                  default: "", null: false
  t.string   "encrypted_password",     default: "", null: false
  t.string   "reset_password_token"
  t.datetime "reset_password_sent_at"
  t.datetime "remember_created_at"
  t.integer  "sign_in_count",          default: 0,  null: false
  t.datetime "current_sign_in_at"
  t.datetime "last_sign_in_at"
  t.string   "current_sign_in_ip"
  t.string   "last_sign_in_ip"
  t.datetime "created_at"
  t.datetime "updated_at"
  t.integer  "status_id",              default: 0
  t.string   "name"
  t.text     "info"
end

create_table "videos", force: :cascade do |t|
  t.datetime "created_at",         null: false
  t.datetime "updated_at",         null: false
  t.string   "title"
  t.integer  "user_id"
  t.string   "video_file_size"
  t.string   "video_updated_at"
  t.string   "video_file_name"
  t.string   "video_content_type"
end  

==================
video model:

class Video < ActiveRecord::Base
  validates :title, presence: true
  validates :video, presence: true

  belongs_to :user

  has_attached_file :video, :styles => { :medium => "300x300>", :thumb => "100x100>" }, :default_url => "/images/:style/missing.png"
  
  validates_attachment_content_type :video, :content_type => /\Aimage\/.*\Z/  
  validates_attachment_file_name :video, :matches => [/png\Z/, /jpe?g\Z/, /gif\Z/]  

 validate :file_size_validation, :if => "video?"  

  def file_size_validation
    errors[:video] << "should be less than 2MB" if video.size.to_i > 1.kilobytes
  end  
end



внимание! порядок методов важен

==================
html new:

<%= form_for(@video) do |f| %>
  <% if @video.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@video.errors.count, "error") %> prohibited this video from being saved:</h2>

      <ul>
      <% @video.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row">
    <div class="col-xs-12 col-sm-2">
      <%= f.label :title %>
    </div>
    <div class="col-xs-12 col-sm-10">
      <%= f.text_field  :title %>
    </div>
  </div>

  <div class="row">
    <div class="col-xs-12 col-sm-2">
      <%= f.label :video %>
    </div>
    <div class="col-xs-12 col-sm-10">
      <%= f.file_field  :video %>
    </div>
  </div>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>


==================
videos controller:

def create
  @video = Video.new(video_params)   
  
  if @video.save
    @video.update_attributes(user: current_user)

    flash[:success] = :video_created
    redirect_to @video
  else
    flash.now[:error] = :user_not_created
    render 'new'
  end
end

def video_params
  params.require(:video).permit(:title, :video)
end

==================
show:
<%= @video.title %>
<%= image_tag @video.video.url %>
<%= image_tag @video.video.url(:thumb) %>

==================
в результате картинки загружаются в каталог public
а в таблицу videos записывается инфо о файле и владельце

==================
==================
==================
==================
==================
==================
==================
==================
==================
==================